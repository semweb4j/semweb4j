<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.semweb4j</groupId>
		<artifactId>parent</artifactId>
		<version>5.0.0-SNAPSHOT</version>
		<relativePath>../org.semweb4j.parent/pom.xml</relativePath>
	</parent>

	<groupId>org.semweb4j</groupId>
	<artifactId>rdfreactor.runtime</artifactId>
	<packaging>jar</packaging>

	<name>Semweb4j RDFReactor runtime library</name>
	<description>
		RDFReactor creates domain-specific, type-safe Java classes which
		act as a view over domain-free, loosely typed RDF instances.

		This library needs to be shipped together with generated
		classes.
	</description>
	<url>http://semweb4.org/rdfreactor</url>
	<inceptionYear>2005</inceptionYear>

	<dependencies>
		<dependency>
			<groupId>org.semweb4j</groupId>
			<artifactId>rdf2go.api</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.semweb4j</groupId>
			<artifactId>rdf2go.impl.sesame</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- to find the parent -->
	<repositories>
		<repository>
			<id>semweb4j-repo</id>
			<name>Semweb4j.org maven repo</name>
			<url>http://semweb4j.org/repo/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<!-- configuration of reporting plugins to be displayed at the site -->
	<reporting>
		<plugins>
			<!-- switch on only the reports we want to see -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>
					maven-project-info-reports-plugin
				</artifactId>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>summary</report>
							<report>dependency-convergence</report>
							<report>project-team</report>
							<report>mailing-list</report>
							<report>dependencies</report>
							<report>issue-tracking</report>
							<report>license</report>
							<!-- we don't want to use the follwing -->
							<!-- <report>cim</report> -->
							<!-- <report>scm</report> -->
						</reports>
					</reportSet>
				</reportSets>
			</plugin>


			<!-- display surefire results on site -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
			</plugin>

			<!-- generates PMD and CDP reports - java sourcecode analyzer -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<configuration>
					<sourceEncoding>utf-8</sourceEncoding>
					<targetJdk>1.6</targetJdk>
				</configuration>
			</plugin>

			<!-- creates sources as html -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<configuration>
					<!-- interlink them with the api-doc of the project -->
					<linkJavadoc>true</linkJavadoc>
				</configuration>
			</plugin>

			<!-- reports the defined tags -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
				<!-- Latest version as of 2010-08-30 -->
				<configuration>
					<tags>
						<tag>TODO</tag>
						<tag>IMPROVE</tag>
						<tag>FIXME</tag>
						<tag>XXX</tag>
						<tag>@@</tag>
					</tags>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- performs a jDepend metric analysis -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
			</plugin>

			<!-- analyses test coverage of the project -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
			</plugin>

			<!-- searching for bug patterns in java bytecode -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<configuration>
					<xmlOutput>false</xmlOutput>
					<xmlOutputDirectory>
						target/findbugs
					</xmlOutputDirectory>
					<!-- High|Normal|Low|Exp|Ignore -->
					<threshold>Normal</threshold>
					<!-- Min|Default|Max -->
					<effort>Default</effort>
					<!-- <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile> <includeFilterFile>findbugs-include.xml</includeFilterFile> 
						<visitors>FindDeadLocalStores,UnreadFields</visitors> <omitVisitors>FindDeadLocalStores,UnreadFields</omitVisitors> 
						<pluginList>/libs/fb-contrib/fb-contrib-2.8.0.jar</pluginList> -->
				</configuration>
			</plugin>

			<!-- informs on changes between releases needs a changes.xml file or a 
				jira bugtracker -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>

				<!-- for JIRA report -->
				<!-- <reportSets> <reportSet> <reports> <report>jira-report</report> 
					</reports> </reportSet> </reportSets> -->

				<!-- for changes.xml file report -->
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>


			<!-- Get really nice JavaDocs with mvn compile javadoc:javadoc Read: http://code.google.com/p/apiviz/#Maven_2_Integration 
				You need to install GraphViz locally first. Then set GRAPHVIZ_HOME to the 
				/bin directory of your local GraphViz installation. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<doclet>org.jboss.apiviz.APIviz</doclet>
					<docletArtifact>
						<groupId>org.jboss.apiviz</groupId>
						<artifactId>apiviz</artifactId>
						<version>1.3.2.GA</version>
					</docletArtifact>
					<useStandardDocletOptions>true</useStandardDocletOptions>
					<charset>UTF-8</charset>
					<encoding>UTF-8</encoding>
					<docencoding>UTF-8</docencoding>
					<breakiterator>true</breakiterator>
					<version>true</version>
					<author>true</author>
					<keywords>true</keywords>
					<additionalparam>
						-sourceclasspath ${project.build.outputDirectory}
					</additionalparam>
					<!-- provide links to several famous projects see: Better builds with 
						maven, p.185 -->
					<!-- do not aggregate javadocs from child elements -->
				</configuration>
			</plugin>

		</plugins>
	</reporting>

	<distributionManagement>
		<!-- repositories inherited after description in http://jira.codehaus.org/browse/MNG-3244?focusedCommentId=281645&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-281645 -->
		<site>
			<id>${distributionManagement.site.id}</id>
			<url>${distributionManagement.site.url}/${project.artifactId}</url>
		</site>
	</distributionManagement>

</project>