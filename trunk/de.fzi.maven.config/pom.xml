<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
  
	<groupId>de.fzi</groupId>
	<artifactId>maven.config</artifactId>
	<packaging>pom</packaging>
	<version>0.0.4-SNAPSHOT</version>
	<name>Common Maven Config</name>
	<inceptionYear>2005</inceptionYear>
	<description>
		This project contains only a pom.xml which models common Maven
		configuration settings. These settings are technical and build
		environment specific, but not project/domain specific.
	</description>

	<!-- declare project specific properties 
	     override them in the child-poms -->
	<properties>
		<!--  user access, no trailing slash -->
		<svn.user>http://semweb4j.googlecode.com/svn</svn.user>
		<!--  developer access, no trailing slash -->
		<svn.dev>https://semweb4j.googlecode.com/svn</svn.dev>
		<svn.name>${groupId}.${artifactId}</svn.name>
	</properties>

	<!-- maven release seems to overwrite this values, so we keep them 
	     in a comment 	
	<scm>
		<connection>scm:svn:${svn.user}/trunk/{$svn.name}</connection>
		<developerConnection>scm:svn:${svn.dev}/trunk/{$svn.name}</developerConnection>
		<url>${svn.user}/{$svn.name}</url>
	</scm>
	-->
	<scm>
		<connection>scm:svn:https://semweb4j.googlecode.com/svn/tags/maven.config-0.0.1</connection>
		<developerConnection>scm:svn:https://semweb4j.googlecode.com/svn/tags/maven.config-0.0.1</developerConnection>
		<url>https://semweb4j.googlecode.com/svn/tags/maven.config-0.0.1</url>
	</scm>

	<!-- repository settings -->
	<!-- ################### -->

	<!-- additional repositories to fetch missing jars -->
	<repositories>
		<!-- normal versions -->
		<repository>
			<id>theoretiker-repo</id>
			<name>Semweb4j.org maven repo</name>
			<url>http://semweb4j.org/repo/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!-- snapshots -->
		<repository>
			<id>theoretiker-snapshots</id>
			<name>Semweb4j.org maven repo</name>
			<url>http://semweb4j.org/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</snapshots>
		</repository>

		<repository>
			<id>codehaus-release-repo</id>
			<name>Codehaus Release Repo</name>
			<url>http://repository.codehaus.org</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

	</repositories>
	
	<!-- the deploy repositories: normal/snapshot/site generation 
	     make sure the porper rights for the given ids are set in 
	     the user's settings.xml -->
	<distributionManagement>
		<!-- normal versions -->
		<repository>
			<id>theoretiker-repo</id>
			<name>Semweb4j.org maven repo</name>
			<url>
				scp://theoretiker.org/home/max/public_html/semweb4j.org/repo
			</url>
			<uniqueVersion>false</uniqueVersion>
		</repository>
		<!-- snapshots -->
		<snapshotRepository>
			<id>theoretiker-snapshots</id>
			<name>Semweb4j.org maven SNAPSHOT repo</name>
			<url>
				scp://theoretiker.org/home/max/public_html/semweb4j.org/snapshots
			</url>
			<uniqueVersion>true</uniqueVersion>
		</snapshotRepository>
		<site>
			<id>theoretiker-site</id>
			<name>Semweb4j site</name>
			<!--  mvn creates new dirs if necessary -->
			<url>
				scp://theoretiker.org/home/max/public_html/semweb4j.org/site
			</url>
		</site>
	</distributionManagement>

	<!-- plugin configuration -->
	<!-- #################### -->
	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh-external</artifactId>
				<version>1.0-alpha-6</version>
			</extension>
		</extensions>

		<plugins>

			<!-- always use Java 1.5 while compiling -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<target>1.5</target>
					<source>1.5</source>
				</configuration>
			</plugin>

			<!-- release project with Maven -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<!-- @@ TEMPORARY! (xam, 04.06.07) version 2.0-beta-6 has a bug when rewriting POMs -->
				<version>2.0-beta-5</version>
				<configuration>
					<!-- configure tag base. MAY NOT contain scm:svn: prefix -->
					<tagBase>${svn.dev}/tags</tagBase>
				</configuration>
			</plugin>

			<!-- build source packages for jars and test jars 
			     http://garbuz.com/sm/content.php/articles/maven2_deploying_sources/ -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- use surefire version that works with Junit 4.x tests -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.3</version>
			</plugin>

			<!-- builds a zip release that contains all dependency libraries 
			     they are copied after compile is executed -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>attached</goal>
						</goals>
						<configuration>
							<finalName>
								site/bin/${project.name}-${version}
							</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>
									${basedir}/src/assembly/lib.xml
								</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- configure site:stage and some display parameters for site
			     generation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<configuration>
							<!--  convenience param to disable reports -->
							<generateReports>true</generateReports>
							<inputEncoding>UTF-8</inputEncoding>
							<outputEncoding>UTF-8</outputEncoding>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<!--  convenience param to disable reports -->
					<generateReports>true</generateReports>
					<inputEncoding>UTF-8</inputEncoding>
					<outputEncoding>UTF-8</outputEncoding>
					<stagingDirectory>../www-test</stagingDirectory>
				</configuration>
			</plugin>

			<!-- where to find the deployed sources -->
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<url>http://semweb4j.org/repo</url>
				</configuration>
			</plugin>

			<!-- generate a DOAP file  
			     usage: http://maven.apache.org/plugins/maven-doap-plugin/usage.html -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-doap-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<doapFile>
								${basedir}/src/site/resources/doap.rdf
							</doapFile>
							<category>semantic web</category>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- the eclipse plugin tries to integrate missing sources 
			     to the .classpath-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>true</downloadSources>
				</configuration>
			</plugin>

			<!-- bind the cobertura clean goal to the general clean goal
				 as suggested in the book: Better builds with maven, p.196 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>clean</id>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<!-- report configuration -->
	<!-- #################### -->
	<!-- configuration of reporting plugins to be displayed at the site -->
	<reporting>
		<plugins>
			<!-- aggregate java doc of sub-projects
				 and provide links to several famous projects
				 see: Better builds with maven, p.185 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<aggregate>true</aggregate>
					<links>
						<link>
							http://java.sun.com/j2se/1.5.0/docs/api/
						</link>
						<link>
							http://java.sun.com/j2ee/1.4/docs/api
						</link>
						<link>
							http://jakarta.apache.org/commons/collections/apidocs-COLLECTIONS_3_0/
						</link>
						<link>
							http://jakarta.apache.org/commons/dbcp/apidocs/
						</link>
						<link>
							http://jakarta.apache.org/commons/fileupload/apidocs/
						</link>
						<link>
							http://jakarta.apache.org/commons/httpclient/apidocs/
						</link>
						<link>
							http://jakarta.apache.org/commons/logging/apidocs/
						</link>
						<link>
							http://jakarta.apache.org/commons/pool/apidocs/
						</link>
						<link>http://www.junit.org/junit/javadoc/</link>
						<link>
							http://logging.apache.org/log4j/docs/api/
						</link>
						<link>
							http://jakarta.apache.org/velocity/api/
						</link>
					</links>
				</configuration>
			</plugin>

			<!-- display surefire results on site -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
			</plugin>

			<!-- generates PMD and CDP reports - java sourcecode analyzer -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<configuration>
					<targetJdk>1.5</targetJdk>
				</configuration>
			</plugin>

			<!-- creates sources as html -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
			</plugin>

			<!-- reports the defined tags -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<configuration>
					<tags>
						<tag>TODO</tag>
						<tag>IMPROVE</tag>
						<tag>FIXME</tag>
						<tag>XXX</tag>
						<tag>@@</tag>
					</tags>
				</configuration>
			</plugin>

			<!-- performs a jDepend metric analysis -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
			</plugin>

			<!-- analyses test coverage of the project -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
			</plugin>

			<!-- searching for bug patterns in java bytecode -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<configuration>
					<xmlOutput>false</xmlOutput>
					<xmlOutputDirectory>
						target/findbugs
					</xmlOutputDirectory>
					<!--  High|Normal|Low|Exp|Ignore -->
					<threshold>Normal</threshold>
					<!--  Min|Default|Max -->
					<effort>Default</effort>
					<!-- 
						<excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
						<includeFilterFile>findbugs-include.xml</includeFilterFile>
						<visitors>FindDeadLocalStores,UnreadFields</visitors>
						<omitVisitors>FindDeadLocalStores,UnreadFields</omitVisitors>
						<pluginList>/libs/fb-contrib/fb-contrib-2.8.0.jar</pluginList>
					-->
				</configuration>
			</plugin>

			<!-- informs on changes between releases 
			     needs a changes.xml file or a jira bugtracker-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			
		</plugins>
	</reporting>
	
</project>