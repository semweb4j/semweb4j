<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.semweb4j</groupId>
		<artifactId>parent</artifactId>
		<version>4.16.4</version>
	</parent>

	<groupId>org.semweb4j</groupId>
	<artifactId>sesame.rdfs-inverse-inferencer</artifactId>
	<version>2.2.3-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>OpenRDF inferencer - extended with inverses - Sail</name>
	<description>
		Adunas Stackable Sail implementation that adds RDF Schema
		inferencing to an RDF store. Hacked by FZI to infer also
		inverses.
	</description>
	<url>http://www.openrdf.org/</url>

	<organization>
		<name>FZI</name>
		<url>http://www.fzi.de/</url>
	</organization>

	<inceptionYear>2008</inceptionYear>

	<licenses>
		<license>
			<name>Aduna BSD-style license</name>
			<url>
				http://www.aduna-software.com/documents/legal/licenses/aduna-bsd.txt
			</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<dependencies>

		<dependency>
			<groupId>org.openrdf</groupId>
			<artifactId>openrdf-sail-inferencer</artifactId>
			<version>2.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.openrdf</groupId>
			<artifactId>openrdf-sail-api</artifactId>
			<version>2.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.openrdf</groupId>
			<artifactId>openrdf-queryalgebra-model</artifactId>
			<version>2.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.openrdf</groupId>
			<artifactId>openrdf-query</artifactId>
			<version>2.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.openrdf</groupId>
			<artifactId>openrdf-queryparser-api</artifactId>
			<version>2.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.openrdf</groupId>
			<artifactId>openrdf-queryparser-serql</artifactId>
			<version>2.0.1</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.openrdf</groupId>
			<artifactId>openrdf-rio-api</artifactId>
			<version>2.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.openrdf</groupId>
			<artifactId>openrdf-model</artifactId>
			<version>2.0.1</version>
		</dependency>

		<dependency>
			<groupId>info.aduna</groupId>
			<artifactId>aduna-iteration</artifactId>
			<version>1.5</version>
		</dependency>

		<dependency>
			<groupId>info.aduna</groupId>
			<artifactId>aduna-text</artifactId>
			<version>1.3</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.3.0</version>
		</dependency>

		<!-- testing dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.3.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.openrdf</groupId>
			<artifactId>openrdf-sail-memory</artifactId>
			<version>2.0.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.openrdf</groupId>
			<artifactId>openrdf-repository-api</artifactId>
			<version>2.0.1</version>
			<!-- 
				<version>2.0</version>
			-->
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.openrdf</groupId>
			<artifactId>openrdf-repository-sail</artifactId>
			<version>2.0.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.3.0</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<properties>
		<!--  user access, no trailing slash -->
		<svn.user>http://semweb4j.googlecode.com/svn</svn.user>
		<!--  developer access, no trailing slash -->
		<svn.dev>https://semweb4j.googlecode.com/svn</svn.dev>
		<svn.name>${groupId}.${artifactId}</svn.name>
	</properties>


	<repositories>
		<!-- to find the parent -->
		<repository>
			<id>semweb4j-repo</id>
			<name>Semweb4j.org maven repo</name>
			<url>http://semweb4j.org/repo/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!--  Aduna -->
		<repository>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
			<id>aduna-repo</id>
			<name>Aduna Repository</name>
			<url>http://repository.aduna-software.org/maven2</url>
		</repository>
		<repository>
			<releases>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</snapshots>
			<id>aduna-snapshot-repo</id>
			<name>Aduna Snapshot Repository</name>
			<url>
				http://repository.aduna-software.org/maven2-snapshots
			</url>
		</repository>
	</repositories>

	<!-- to define where to put the site for this bundle -->
	<distributionManagement>
		<site>
			<id>semweb4j-site</id>
			<name>semweb4j.org site server</name>
			<url>scp://${semweb4j.site}/${artifactId}</url>
		</site>
	</distributionManagement>
</project>