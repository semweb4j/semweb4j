
/**
 * generated by http://RDFReactor.ontoware.org on 10.05.06 00:53
 */
package org.ontoware.rdfreactor.example;

import org.ontoware.rdf2go.exception.ModelRuntimeException;
import org.ontoware.rdf2go.model.Model;
import org.ontoware.rdf2go.model.node.BlankNode;
import org.ontoware.rdf2go.model.node.Resource;
import org.ontoware.rdf2go.model.node.URI;
import org.ontoware.rdf2go.model.node.impl.URIImpl;


/**
 * This class was generated by <a href="http://RDFReactor.ontoware.org">RDFReactor</a> on 10.05.06 00:53
 * This class manages access to these properties:
 * <ul>
 *   <li> SeeAlso </li>
 *   <li> IsDefinedBy </li>
 *   <li> Comment </li>
 *   <li> Label </li>
 *   <li> Type </li>
 * </ul>
 * Schema Comment: This class acts as a catch-all for all properties, for which no domain has specified.
 */
public class Thing extends org.ontoware.rdfreactor.schema.rdfschema.Class {

    /** http://www.w3.org/2000/01/rdf-schema#Class */
	public static final URI RDFS_CLASS = URIImpl.createURIWithoutChecking("http://www.w3.org/2000/01/rdf-schema#Class");

    /** http://www.w3.org/2000/01/rdf-schema#seeAlso */
	public static final URI SEEALSO = URIImpl.createURIWithoutChecking("http://www.w3.org/2000/01/rdf-schema#seeAlso");

    /** http://www.w3.org/2000/01/rdf-schema#isDefinedBy */
	public static final URI ISDEFINEDBY = URIImpl.createURIWithoutChecking("http://www.w3.org/2000/01/rdf-schema#isDefinedBy");

    /** http://www.w3.org/2000/01/rdf-schema#comment */
	public static final URI COMMENT = URIImpl.createURIWithoutChecking("http://www.w3.org/2000/01/rdf-schema#comment");

    /** http://www.w3.org/2000/01/rdf-schema#label */
	public static final URI LABEL = URIImpl.createURIWithoutChecking("http://www.w3.org/2000/01/rdf-schema#label");

    /** http://www.w3.org/1999/02/22-rdf-syntax-ns#type */
	public static final URI TYPE = URIImpl.createURIWithoutChecking("http://www.w3.org/1999/02/22-rdf-syntax-ns#type");
	
	// protected constructors needed for inheritance
	
	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param classURI URI of RDFS class
	 * @param instanceIdentifier URI, BlankNode or URL that identifies this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 */
	protected Thing ( Model model, URI classURI, Resource instanceIdentifier, boolean write ) {
		super(model, classURI, instanceIdentifier, write);
	}

	// public constructors

	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param uri URI of this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 */
	public Thing ( Model model, Resource instanceIdentifier, boolean write ) {
		super(model, RDFS_CLASS, instanceIdentifier, write);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * The statement (this, rdf:type, TYPE) is written to the model
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param uri URI of this instance
	 */
	public Thing ( Model model, URI uri ) {
		this(model, uri, true);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * The statement (this, rdf:type, TYPE) is written to the model
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param uriString A URI of this instance, represented as a String
	 * @throws ModelRuntimeException 
	 */
	public Thing ( Model model, String uriString ) throws ModelRuntimeException {
		this(model, URIImpl.create(uriString), true);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by a blank node.
	 * Creating two wrappers for the same blank node is legal.
	 * The statement (this, rdf:type, TYPE) is written to the model
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param bnode BlankNode of this instance
	 */
	public Thing ( Model model, BlankNode bnode ) {
		this(model, bnode, true);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by 
	 * a randomly generated URI.
	 * Creating two wrappers results in different URIs.
	 * The statement (this, rdf:type, TYPE) is written to the model
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 */
	public Thing ( Model model ) {
		this(model, RDFS_CLASS, true);
	}


  }

  
  
