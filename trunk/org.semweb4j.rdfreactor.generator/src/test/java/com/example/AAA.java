/**
 * generated by http://RDFReactor.semweb4j.org ($Id: CodeGenerator.java 870 2007-11-07 17:30:59Z max.at.xam.de $) on 26.01.08 15:35
 */
package com.example;

import org.ontoware.aifbcommons.collection.ClosableIterator;
import org.ontoware.rdf2go.exception.ModelRuntimeException;
import org.ontoware.rdf2go.model.Model;
import org.ontoware.rdf2go.model.node.BlankNode;
import org.ontoware.rdf2go.model.node.URI;
import org.ontoware.rdf2go.model.node.impl.URIImpl;
import org.ontoware.rdfreactor.runtime.Base;
import org.ontoware.rdfreactor.runtime.ReactorResult;





/**
 * This class manages access to these properties:
 * <ul>
 *   <li> Ppp1 </li>
 *   <li> Ppp10 </li>
 *   <li> Ppp11 </li>
 *   <li> Ppp12 </li>
 *   <li> Ppp13 </li>
 *   <li> Ppp14 </li>
 *   <li> Ppp15 </li>
 *   <li> Ppp16 </li>
 *   <li> Ppp17 </li>
 *   <li> Ppp18 </li>
 *   <li> Ppp19 </li>
 *   <li> Ppp2 </li>
 *   <li> Ppp3 </li>
 *   <li> Ppp4 </li>
 *   <li> Ppp5 </li>
 *   <li> Ppp6 </li>
 *   <li> Ppp7 </li>
 *   <li> Ppp8 </li>
 *   <li> Ppp9 </li>
 *   <li> Qqq1 </li>
 *   <li> Qqq10 </li>
 *   <li> Qqq11 </li>
 *   <li> Qqq12 </li>
 *   <li> Qqq13 </li>
 *   <li> Qqq14 </li>
 *   <li> Qqq15 </li>
 *   <li> Qqq16 </li>
 *   <li> Qqq17 </li>
 *   <li> Qqq18 </li>
 *   <li> Qqq19 </li>
 *   <li> Qqq2 </li>
 *   <li> Qqq3 </li>
 *   <li> Qqq4 </li>
 *   <li> Qqq5 </li>
 *   <li> Qqq6 </li>
 *   <li> Qqq7 </li>
 *   <li> Qqq8 </li>
 *   <li> Qqq9 </li>
 * </ul>
 *
 * This class was generated by <a href="http://RDFReactor.semweb4j.org">RDFReactor</a> on 26.01.08 15:35
 */
public class AAA extends Thing {

    /** urn:ex:AAA */
	public static final URI RDFS_CLASS = new URIImpl("urn:ex:AAA", false);

    /** urn:ex:ppp1 */
	public static final URI PPP1 = new URIImpl("urn:ex:ppp1",false);

    /** urn:ex:ppp10 */
	public static final URI PPP10 = new URIImpl("urn:ex:ppp10",false);

    /** urn:ex:ppp11 */
	public static final URI PPP11 = new URIImpl("urn:ex:ppp11",false);

    /** urn:ex:ppp12 */
	public static final URI PPP12 = new URIImpl("urn:ex:ppp12",false);

    /** urn:ex:ppp13 */
	public static final URI PPP13 = new URIImpl("urn:ex:ppp13",false);

    /** urn:ex:ppp14 */
	public static final URI PPP14 = new URIImpl("urn:ex:ppp14",false);

    /** urn:ex:ppp15 */
	public static final URI PPP15 = new URIImpl("urn:ex:ppp15",false);

    /** urn:ex:ppp16 */
	public static final URI PPP16 = new URIImpl("urn:ex:ppp16",false);

    /** urn:ex:ppp17 */
	public static final URI PPP17 = new URIImpl("urn:ex:ppp17",false);

    /** urn:ex:ppp18 */
	public static final URI PPP18 = new URIImpl("urn:ex:ppp18",false);

    /** urn:ex:ppp19 */
	public static final URI PPP19 = new URIImpl("urn:ex:ppp19",false);

    /** urn:ex:ppp2 */
	public static final URI PPP2 = new URIImpl("urn:ex:ppp2",false);

    /** urn:ex:ppp3 */
	public static final URI PPP3 = new URIImpl("urn:ex:ppp3",false);

    /** urn:ex:ppp4 */
	public static final URI PPP4 = new URIImpl("urn:ex:ppp4",false);

    /** urn:ex:ppp5 */
	public static final URI PPP5 = new URIImpl("urn:ex:ppp5",false);

    /** urn:ex:ppp6 */
	public static final URI PPP6 = new URIImpl("urn:ex:ppp6",false);

    /** urn:ex:ppp7 */
	public static final URI PPP7 = new URIImpl("urn:ex:ppp7",false);

    /** urn:ex:ppp8 */
	public static final URI PPP8 = new URIImpl("urn:ex:ppp8",false);

    /** urn:ex:ppp9 */
	public static final URI PPP9 = new URIImpl("urn:ex:ppp9",false);

    /** urn:ex:qqq1 */
	public static final URI QQQ1 = new URIImpl("urn:ex:qqq1",false);

    /** urn:ex:qqq10 */
	public static final URI QQQ10 = new URIImpl("urn:ex:qqq10",false);

    /** urn:ex:qqq11 */
	public static final URI QQQ11 = new URIImpl("urn:ex:qqq11",false);

    /** urn:ex:qqq12 */
	public static final URI QQQ12 = new URIImpl("urn:ex:qqq12",false);

    /** urn:ex:qqq13 */
	public static final URI QQQ13 = new URIImpl("urn:ex:qqq13",false);

    /** urn:ex:qqq14 */
	public static final URI QQQ14 = new URIImpl("urn:ex:qqq14",false);

    /** urn:ex:qqq15 */
	public static final URI QQQ15 = new URIImpl("urn:ex:qqq15",false);

    /** urn:ex:qqq16 */
	public static final URI QQQ16 = new URIImpl("urn:ex:qqq16",false);

    /** urn:ex:qqq17 */
	public static final URI QQQ17 = new URIImpl("urn:ex:qqq17",false);

    /** urn:ex:qqq18 */
	public static final URI QQQ18 = new URIImpl("urn:ex:qqq18",false);

    /** urn:ex:qqq19 */
	public static final URI QQQ19 = new URIImpl("urn:ex:qqq19",false);

    /** urn:ex:qqq2 */
	public static final URI QQQ2 = new URIImpl("urn:ex:qqq2",false);

    /** urn:ex:qqq3 */
	public static final URI QQQ3 = new URIImpl("urn:ex:qqq3",false);

    /** urn:ex:qqq4 */
	public static final URI QQQ4 = new URIImpl("urn:ex:qqq4",false);

    /** urn:ex:qqq5 */
	public static final URI QQQ5 = new URIImpl("urn:ex:qqq5",false);

    /** urn:ex:qqq6 */
	public static final URI QQQ6 = new URIImpl("urn:ex:qqq6",false);

    /** urn:ex:qqq7 */
	public static final URI QQQ7 = new URIImpl("urn:ex:qqq7",false);

    /** urn:ex:qqq8 */
	public static final URI QQQ8 = new URIImpl("urn:ex:qqq8",false);

    /** urn:ex:qqq9 */
	public static final URI QQQ9 = new URIImpl("urn:ex:qqq9",false);

    /** all property-URIs with this class as domain */
    public static final URI[] MANAGED_URIS = {
      new URIImpl("urn:ex:ppp1",false),
      new URIImpl("urn:ex:ppp10",false),
      new URIImpl("urn:ex:ppp11",false),
      new URIImpl("urn:ex:ppp12",false),
      new URIImpl("urn:ex:ppp13",false),
      new URIImpl("urn:ex:ppp14",false),
      new URIImpl("urn:ex:ppp15",false),
      new URIImpl("urn:ex:ppp16",false),
      new URIImpl("urn:ex:ppp17",false),
      new URIImpl("urn:ex:ppp18",false),
      new URIImpl("urn:ex:ppp19",false),
      new URIImpl("urn:ex:ppp2",false),
      new URIImpl("urn:ex:ppp3",false),
      new URIImpl("urn:ex:ppp4",false),
      new URIImpl("urn:ex:ppp5",false),
      new URIImpl("urn:ex:ppp6",false),
      new URIImpl("urn:ex:ppp7",false),
      new URIImpl("urn:ex:ppp8",false),
      new URIImpl("urn:ex:ppp9",false),
      new URIImpl("urn:ex:qqq1",false),
      new URIImpl("urn:ex:qqq10",false),
      new URIImpl("urn:ex:qqq11",false),
      new URIImpl("urn:ex:qqq12",false),
      new URIImpl("urn:ex:qqq13",false),
      new URIImpl("urn:ex:qqq14",false),
      new URIImpl("urn:ex:qqq15",false),
      new URIImpl("urn:ex:qqq16",false),
      new URIImpl("urn:ex:qqq17",false),
      new URIImpl("urn:ex:qqq18",false),
      new URIImpl("urn:ex:qqq19",false),
      new URIImpl("urn:ex:qqq2",false),
      new URIImpl("urn:ex:qqq3",false),
      new URIImpl("urn:ex:qqq4",false),
      new URIImpl("urn:ex:qqq5",false),
      new URIImpl("urn:ex:qqq6",false),
      new URIImpl("urn:ex:qqq7",false),
      new URIImpl("urn:ex:qqq8",false),
      new URIImpl("urn:ex:qqq9",false) 
    };


	// protected constructors needed for inheritance
	
	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.semweb4j.org
	 * @param classURI URI of RDFS class
	 * @param instanceIdentifier Resource that identifies this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c1] 
	 */
	protected AAA ( Model model, URI classURI, org.ontoware.rdf2go.model.node.Resource instanceIdentifier, boolean write ) {
		super(model, classURI, instanceIdentifier, write);
	}

	// public constructors

	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param instanceIdentifier an RDF2Go Resource identifying this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c2] 
	 */
	public AAA ( Model model, org.ontoware.rdf2go.model.node.Resource instanceIdentifier, boolean write ) {
		super(model, RDFS_CLASS, instanceIdentifier, write);
	}


	/**
	 * Returns a Java wrapper over an RDF object, identified by a URI, given as a String.
	 * Creating two wrappers for the same URI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param uriString a URI given as a String
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 * @throws ModelRuntimeException if URI syntax is wrong
	 *
	 * [Generated from RDFReactor template rule #c7] 
	 */
	public AAA ( Model model, String uriString, boolean write) throws ModelRuntimeException {
		super(model, RDFS_CLASS, new URIImpl(uriString,false), write);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by a blank node.
	 * Creating two wrappers for the same blank node is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param bnode BlankNode of this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c8] 
	 */
	public AAA ( Model model, BlankNode bnode, boolean write ) {
		super(model, RDFS_CLASS, bnode, write);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by 
	 * a randomly generated URI.
	 * Creating two wrappers results in different URIs.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c9] 
	 */
	public AAA ( Model model, boolean write ) {
		super(model, RDFS_CLASS, model.newRandomUniqueURI(), write);
	}

    ///////////////////////////////////////////////////////////////////
    // typing

	/**
	 * Create a new instance of this class in the model. 
	 * That is, create the statement (instanceResource, RDF.type, urn:ex:AAA).
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #class1] 
	 */
	public static void createInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.createInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 * @return true if instanceResource is an instance of this class in the model
	 *
	 * [Generated from RDFReactor template rule #class2] 
	 */
	public static boolean hasInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.hasInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * @param model an RDF2Go model
	 * @return all instances of this class in Model 'model' as RDF resources
	 *
	 * [Generated from RDFReactor template rule #class3] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllInstances(Model model) {
		return Base.getAllInstances(model, RDFS_CLASS, org.ontoware.rdf2go.model.node.Resource.class);
	}

	/**
	 * @param model an RDF2Go model
	 * @return all instances of this class in Model 'model' as a ReactorResult,
	 * which can conveniently be converted to iterator, list or array.
	 *
	 * [Generated from RDFReactor template rule #class3-as] 
	 */
	public static ReactorResult<? extends AAA> getAllInstance_as(Model model) {
		return Base.getAllInstances_as(model, RDFS_CLASS, AAA.class );
	}

    /**
	 * Delete all rdf:type from this instance. Other triples are not affected.
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #class4] 
	 */
	public static void deleteInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.deleteInstance(model, RDFS_CLASS, instanceResource);
	}

    ///////////////////////////////////////////////////////////////////
    // property access methods


     /**
     * Get all values of property Ppp1 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp1_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP1);
	}
	
    /**
     * Get all values of property Ppp1 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp1_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP1, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp1 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp1_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP1);
	}

    /**
     * Get all values of property Ppp1 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp1_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP1, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp1     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp1(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP1, BBB.class);
	}
	
    /**
     * Get all values of property Ppp1 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp1_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP1, BBB.class);
	}

    /**
     * Get all values of property Ppp1     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp1() {
		return Base.getAll(this.model, this.getResource(), PPP1, BBB.class);
	}

    /**
     * Get all values of property Ppp1 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp1_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP1, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp1 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp1( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP1, value);
	}
	
    /**
     * Adds a value to property Ppp1 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp1( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP1, value);
	}
    /**
     * Adds a value to property Ppp1 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp1(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP1, value);
	}
	
    /**
     * Adds a value to property Ppp1 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp1(BBB value) {
		Base.add(this.model, this.getResource(), PPP1, value);
	}
  

    /**
     * Sets a value of property Ppp1 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp1( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP1, value);
	}
	
    /**
     * Sets a value of property Ppp1 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp1( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP1, value);
	}
    /**
     * Sets a value of property Ppp1 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp1(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP1, value);
	}
	
    /**
     * Sets a value of property Ppp1 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp1(BBB value) {
		Base.set(this.model, this.getResource(), PPP1, value);
	}
  


    /**
     * Removes a value of property Ppp1 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp1( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP1, value);
	}
	
    /**
     * Removes a value of property Ppp1 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp1( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP1, value);
	}
    /**
     * Removes a value of property Ppp1 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp1(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP1, value);
	}
	
    /**
     * Removes a value of property Ppp1 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp1(BBB value) {
		Base.remove(this.model, this.getResource(), PPP1, value);
	}
  
    /**
     * Removes all values of property Ppp1     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp1( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP1);
	}
	
    /**
     * Removes all values of property Ppp1	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp1() {
		Base.removeAll(this.model, this.getResource(), PPP1);
	}
      /**
     * Get all values of property Ppp10 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp10_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP10);
	}
	
    /**
     * Get all values of property Ppp10 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp10_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP10, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp10 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp10_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP10);
	}

    /**
     * Get all values of property Ppp10 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp10_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP10, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp10     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp10(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP10, BBB.class);
	}
	
    /**
     * Get all values of property Ppp10 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp10_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP10, BBB.class);
	}

    /**
     * Get all values of property Ppp10     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp10() {
		return Base.getAll(this.model, this.getResource(), PPP10, BBB.class);
	}

    /**
     * Get all values of property Ppp10 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp10_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP10, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp10 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp10( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP10, value);
	}
	
    /**
     * Adds a value to property Ppp10 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp10( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP10, value);
	}
    /**
     * Adds a value to property Ppp10 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp10(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP10, value);
	}
	
    /**
     * Adds a value to property Ppp10 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp10(BBB value) {
		Base.add(this.model, this.getResource(), PPP10, value);
	}
  

    /**
     * Sets a value of property Ppp10 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp10( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP10, value);
	}
	
    /**
     * Sets a value of property Ppp10 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp10( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP10, value);
	}
    /**
     * Sets a value of property Ppp10 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp10(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP10, value);
	}
	
    /**
     * Sets a value of property Ppp10 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp10(BBB value) {
		Base.set(this.model, this.getResource(), PPP10, value);
	}
  


    /**
     * Removes a value of property Ppp10 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp10( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP10, value);
	}
	
    /**
     * Removes a value of property Ppp10 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp10( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP10, value);
	}
    /**
     * Removes a value of property Ppp10 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp10(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP10, value);
	}
	
    /**
     * Removes a value of property Ppp10 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp10(BBB value) {
		Base.remove(this.model, this.getResource(), PPP10, value);
	}
  
    /**
     * Removes all values of property Ppp10     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp10( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP10);
	}
	
    /**
     * Removes all values of property Ppp10	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp10() {
		Base.removeAll(this.model, this.getResource(), PPP10);
	}
      /**
     * Get all values of property Ppp11 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp11_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP11);
	}
	
    /**
     * Get all values of property Ppp11 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp11_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP11, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp11 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp11_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP11);
	}

    /**
     * Get all values of property Ppp11 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp11_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP11, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp11     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp11(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP11, BBB.class);
	}
	
    /**
     * Get all values of property Ppp11 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp11_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP11, BBB.class);
	}

    /**
     * Get all values of property Ppp11     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp11() {
		return Base.getAll(this.model, this.getResource(), PPP11, BBB.class);
	}

    /**
     * Get all values of property Ppp11 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp11_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP11, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp11 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp11( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP11, value);
	}
	
    /**
     * Adds a value to property Ppp11 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp11( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP11, value);
	}
    /**
     * Adds a value to property Ppp11 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp11(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP11, value);
	}
	
    /**
     * Adds a value to property Ppp11 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp11(BBB value) {
		Base.add(this.model, this.getResource(), PPP11, value);
	}
  

    /**
     * Sets a value of property Ppp11 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp11( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP11, value);
	}
	
    /**
     * Sets a value of property Ppp11 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp11( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP11, value);
	}
    /**
     * Sets a value of property Ppp11 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp11(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP11, value);
	}
	
    /**
     * Sets a value of property Ppp11 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp11(BBB value) {
		Base.set(this.model, this.getResource(), PPP11, value);
	}
  


    /**
     * Removes a value of property Ppp11 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp11( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP11, value);
	}
	
    /**
     * Removes a value of property Ppp11 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp11( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP11, value);
	}
    /**
     * Removes a value of property Ppp11 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp11(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP11, value);
	}
	
    /**
     * Removes a value of property Ppp11 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp11(BBB value) {
		Base.remove(this.model, this.getResource(), PPP11, value);
	}
  
    /**
     * Removes all values of property Ppp11     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp11( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP11);
	}
	
    /**
     * Removes all values of property Ppp11	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp11() {
		Base.removeAll(this.model, this.getResource(), PPP11);
	}
      /**
     * Get all values of property Ppp12 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp12_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP12);
	}
	
    /**
     * Get all values of property Ppp12 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp12_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP12, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp12 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp12_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP12);
	}

    /**
     * Get all values of property Ppp12 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp12_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP12, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp12     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp12(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP12, BBB.class);
	}
	
    /**
     * Get all values of property Ppp12 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp12_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP12, BBB.class);
	}

    /**
     * Get all values of property Ppp12     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp12() {
		return Base.getAll(this.model, this.getResource(), PPP12, BBB.class);
	}

    /**
     * Get all values of property Ppp12 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp12_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP12, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp12 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp12( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP12, value);
	}
	
    /**
     * Adds a value to property Ppp12 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp12( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP12, value);
	}
    /**
     * Adds a value to property Ppp12 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp12(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP12, value);
	}
	
    /**
     * Adds a value to property Ppp12 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp12(BBB value) {
		Base.add(this.model, this.getResource(), PPP12, value);
	}
  

    /**
     * Sets a value of property Ppp12 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp12( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP12, value);
	}
	
    /**
     * Sets a value of property Ppp12 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp12( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP12, value);
	}
    /**
     * Sets a value of property Ppp12 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp12(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP12, value);
	}
	
    /**
     * Sets a value of property Ppp12 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp12(BBB value) {
		Base.set(this.model, this.getResource(), PPP12, value);
	}
  


    /**
     * Removes a value of property Ppp12 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp12( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP12, value);
	}
	
    /**
     * Removes a value of property Ppp12 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp12( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP12, value);
	}
    /**
     * Removes a value of property Ppp12 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp12(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP12, value);
	}
	
    /**
     * Removes a value of property Ppp12 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp12(BBB value) {
		Base.remove(this.model, this.getResource(), PPP12, value);
	}
  
    /**
     * Removes all values of property Ppp12     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp12( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP12);
	}
	
    /**
     * Removes all values of property Ppp12	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp12() {
		Base.removeAll(this.model, this.getResource(), PPP12);
	}
      /**
     * Get all values of property Ppp13 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp13_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP13);
	}
	
    /**
     * Get all values of property Ppp13 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp13_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP13, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp13 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp13_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP13);
	}

    /**
     * Get all values of property Ppp13 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp13_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP13, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp13     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP13, BBB.class);
	}
	
    /**
     * Get all values of property Ppp13 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp13_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP13, BBB.class);
	}

    /**
     * Get all values of property Ppp13     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp13() {
		return Base.getAll(this.model, this.getResource(), PPP13, BBB.class);
	}

    /**
     * Get all values of property Ppp13 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp13_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP13, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp13 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP13, value);
	}
	
    /**
     * Adds a value to property Ppp13 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp13( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP13, value);
	}
    /**
     * Adds a value to property Ppp13 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP13, value);
	}
	
    /**
     * Adds a value to property Ppp13 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp13(BBB value) {
		Base.add(this.model, this.getResource(), PPP13, value);
	}
  

    /**
     * Sets a value of property Ppp13 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP13, value);
	}
	
    /**
     * Sets a value of property Ppp13 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp13( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP13, value);
	}
    /**
     * Sets a value of property Ppp13 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP13, value);
	}
	
    /**
     * Sets a value of property Ppp13 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp13(BBB value) {
		Base.set(this.model, this.getResource(), PPP13, value);
	}
  


    /**
     * Removes a value of property Ppp13 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP13, value);
	}
	
    /**
     * Removes a value of property Ppp13 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp13( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP13, value);
	}
    /**
     * Removes a value of property Ppp13 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP13, value);
	}
	
    /**
     * Removes a value of property Ppp13 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp13(BBB value) {
		Base.remove(this.model, this.getResource(), PPP13, value);
	}
  
    /**
     * Removes all values of property Ppp13     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP13);
	}
	
    /**
     * Removes all values of property Ppp13	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp13() {
		Base.removeAll(this.model, this.getResource(), PPP13);
	}
      /**
     * Get all values of property Ppp14 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp14_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP14);
	}
	
    /**
     * Get all values of property Ppp14 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp14_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP14, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp14 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp14_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP14);
	}

    /**
     * Get all values of property Ppp14 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp14_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP14, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp14     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp14(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP14, BBB.class);
	}
	
    /**
     * Get all values of property Ppp14 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp14_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP14, BBB.class);
	}

    /**
     * Get all values of property Ppp14     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp14() {
		return Base.getAll(this.model, this.getResource(), PPP14, BBB.class);
	}

    /**
     * Get all values of property Ppp14 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp14_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP14, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp14 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp14( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP14, value);
	}
	
    /**
     * Adds a value to property Ppp14 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp14( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP14, value);
	}
    /**
     * Adds a value to property Ppp14 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp14(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP14, value);
	}
	
    /**
     * Adds a value to property Ppp14 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp14(BBB value) {
		Base.add(this.model, this.getResource(), PPP14, value);
	}
  

    /**
     * Sets a value of property Ppp14 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp14( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP14, value);
	}
	
    /**
     * Sets a value of property Ppp14 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp14( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP14, value);
	}
    /**
     * Sets a value of property Ppp14 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp14(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP14, value);
	}
	
    /**
     * Sets a value of property Ppp14 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp14(BBB value) {
		Base.set(this.model, this.getResource(), PPP14, value);
	}
  


    /**
     * Removes a value of property Ppp14 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp14( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP14, value);
	}
	
    /**
     * Removes a value of property Ppp14 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp14( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP14, value);
	}
    /**
     * Removes a value of property Ppp14 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp14(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP14, value);
	}
	
    /**
     * Removes a value of property Ppp14 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp14(BBB value) {
		Base.remove(this.model, this.getResource(), PPP14, value);
	}
  
    /**
     * Removes all values of property Ppp14     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp14( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP14);
	}
	
    /**
     * Removes all values of property Ppp14	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp14() {
		Base.removeAll(this.model, this.getResource(), PPP14);
	}
      /**
     * Get all values of property Ppp15 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp15_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP15);
	}
	
    /**
     * Get all values of property Ppp15 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp15_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP15, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp15 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp15_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP15);
	}

    /**
     * Get all values of property Ppp15 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp15_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP15, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp15     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp15(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP15, BBB.class);
	}
	
    /**
     * Get all values of property Ppp15 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp15_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP15, BBB.class);
	}

    /**
     * Get all values of property Ppp15     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp15() {
		return Base.getAll(this.model, this.getResource(), PPP15, BBB.class);
	}

    /**
     * Get all values of property Ppp15 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp15_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP15, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp15 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp15( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP15, value);
	}
	
    /**
     * Adds a value to property Ppp15 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp15( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP15, value);
	}
    /**
     * Adds a value to property Ppp15 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp15(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP15, value);
	}
	
    /**
     * Adds a value to property Ppp15 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp15(BBB value) {
		Base.add(this.model, this.getResource(), PPP15, value);
	}
  

    /**
     * Sets a value of property Ppp15 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp15( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP15, value);
	}
	
    /**
     * Sets a value of property Ppp15 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp15( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP15, value);
	}
    /**
     * Sets a value of property Ppp15 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp15(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP15, value);
	}
	
    /**
     * Sets a value of property Ppp15 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp15(BBB value) {
		Base.set(this.model, this.getResource(), PPP15, value);
	}
  


    /**
     * Removes a value of property Ppp15 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp15( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP15, value);
	}
	
    /**
     * Removes a value of property Ppp15 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp15( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP15, value);
	}
    /**
     * Removes a value of property Ppp15 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp15(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP15, value);
	}
	
    /**
     * Removes a value of property Ppp15 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp15(BBB value) {
		Base.remove(this.model, this.getResource(), PPP15, value);
	}
  
    /**
     * Removes all values of property Ppp15     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp15( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP15);
	}
	
    /**
     * Removes all values of property Ppp15	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp15() {
		Base.removeAll(this.model, this.getResource(), PPP15);
	}
      /**
     * Get all values of property Ppp16 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp16_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP16);
	}
	
    /**
     * Get all values of property Ppp16 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp16_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP16, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp16 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp16_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP16);
	}

    /**
     * Get all values of property Ppp16 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp16_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP16, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp16     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp16(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP16, BBB.class);
	}
	
    /**
     * Get all values of property Ppp16 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp16_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP16, BBB.class);
	}

    /**
     * Get all values of property Ppp16     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp16() {
		return Base.getAll(this.model, this.getResource(), PPP16, BBB.class);
	}

    /**
     * Get all values of property Ppp16 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp16_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP16, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp16 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp16( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP16, value);
	}
	
    /**
     * Adds a value to property Ppp16 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp16( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP16, value);
	}
    /**
     * Adds a value to property Ppp16 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp16(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP16, value);
	}
	
    /**
     * Adds a value to property Ppp16 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp16(BBB value) {
		Base.add(this.model, this.getResource(), PPP16, value);
	}
  

    /**
     * Sets a value of property Ppp16 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp16( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP16, value);
	}
	
    /**
     * Sets a value of property Ppp16 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp16( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP16, value);
	}
    /**
     * Sets a value of property Ppp16 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp16(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP16, value);
	}
	
    /**
     * Sets a value of property Ppp16 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp16(BBB value) {
		Base.set(this.model, this.getResource(), PPP16, value);
	}
  


    /**
     * Removes a value of property Ppp16 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp16( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP16, value);
	}
	
    /**
     * Removes a value of property Ppp16 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp16( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP16, value);
	}
    /**
     * Removes a value of property Ppp16 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp16(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP16, value);
	}
	
    /**
     * Removes a value of property Ppp16 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp16(BBB value) {
		Base.remove(this.model, this.getResource(), PPP16, value);
	}
  
    /**
     * Removes all values of property Ppp16     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp16( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP16);
	}
	
    /**
     * Removes all values of property Ppp16	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp16() {
		Base.removeAll(this.model, this.getResource(), PPP16);
	}
      /**
     * Get all values of property Ppp17 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp17_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP17);
	}
	
    /**
     * Get all values of property Ppp17 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp17_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP17, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp17 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp17_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP17);
	}

    /**
     * Get all values of property Ppp17 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp17_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP17, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp17     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp17(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP17, BBB.class);
	}
	
    /**
     * Get all values of property Ppp17 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp17_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP17, BBB.class);
	}

    /**
     * Get all values of property Ppp17     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp17() {
		return Base.getAll(this.model, this.getResource(), PPP17, BBB.class);
	}

    /**
     * Get all values of property Ppp17 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp17_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP17, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp17 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp17( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP17, value);
	}
	
    /**
     * Adds a value to property Ppp17 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp17( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP17, value);
	}
    /**
     * Adds a value to property Ppp17 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp17(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP17, value);
	}
	
    /**
     * Adds a value to property Ppp17 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp17(BBB value) {
		Base.add(this.model, this.getResource(), PPP17, value);
	}
  

    /**
     * Sets a value of property Ppp17 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp17( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP17, value);
	}
	
    /**
     * Sets a value of property Ppp17 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp17( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP17, value);
	}
    /**
     * Sets a value of property Ppp17 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp17(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP17, value);
	}
	
    /**
     * Sets a value of property Ppp17 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp17(BBB value) {
		Base.set(this.model, this.getResource(), PPP17, value);
	}
  


    /**
     * Removes a value of property Ppp17 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp17( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP17, value);
	}
	
    /**
     * Removes a value of property Ppp17 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp17( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP17, value);
	}
    /**
     * Removes a value of property Ppp17 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp17(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP17, value);
	}
	
    /**
     * Removes a value of property Ppp17 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp17(BBB value) {
		Base.remove(this.model, this.getResource(), PPP17, value);
	}
  
    /**
     * Removes all values of property Ppp17     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp17( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP17);
	}
	
    /**
     * Removes all values of property Ppp17	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp17() {
		Base.removeAll(this.model, this.getResource(), PPP17);
	}
      /**
     * Get all values of property Ppp18 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp18_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP18);
	}
	
    /**
     * Get all values of property Ppp18 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp18_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP18, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp18 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp18_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP18);
	}

    /**
     * Get all values of property Ppp18 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp18_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP18, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp18     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp18(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP18, BBB.class);
	}
	
    /**
     * Get all values of property Ppp18 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp18_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP18, BBB.class);
	}

    /**
     * Get all values of property Ppp18     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp18() {
		return Base.getAll(this.model, this.getResource(), PPP18, BBB.class);
	}

    /**
     * Get all values of property Ppp18 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp18_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP18, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp18 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp18( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP18, value);
	}
	
    /**
     * Adds a value to property Ppp18 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp18( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP18, value);
	}
    /**
     * Adds a value to property Ppp18 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp18(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP18, value);
	}
	
    /**
     * Adds a value to property Ppp18 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp18(BBB value) {
		Base.add(this.model, this.getResource(), PPP18, value);
	}
  

    /**
     * Sets a value of property Ppp18 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp18( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP18, value);
	}
	
    /**
     * Sets a value of property Ppp18 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp18( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP18, value);
	}
    /**
     * Sets a value of property Ppp18 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp18(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP18, value);
	}
	
    /**
     * Sets a value of property Ppp18 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp18(BBB value) {
		Base.set(this.model, this.getResource(), PPP18, value);
	}
  


    /**
     * Removes a value of property Ppp18 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp18( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP18, value);
	}
	
    /**
     * Removes a value of property Ppp18 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp18( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP18, value);
	}
    /**
     * Removes a value of property Ppp18 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp18(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP18, value);
	}
	
    /**
     * Removes a value of property Ppp18 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp18(BBB value) {
		Base.remove(this.model, this.getResource(), PPP18, value);
	}
  
    /**
     * Removes all values of property Ppp18     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp18( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP18);
	}
	
    /**
     * Removes all values of property Ppp18	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp18() {
		Base.removeAll(this.model, this.getResource(), PPP18);
	}
      /**
     * Get all values of property Ppp19 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp19_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP19);
	}
	
    /**
     * Get all values of property Ppp19 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp19_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP19, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp19 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp19_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP19);
	}

    /**
     * Get all values of property Ppp19 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp19_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP19, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp19     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp19(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP19, BBB.class);
	}
	
    /**
     * Get all values of property Ppp19 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp19_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP19, BBB.class);
	}

    /**
     * Get all values of property Ppp19     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp19() {
		return Base.getAll(this.model, this.getResource(), PPP19, BBB.class);
	}

    /**
     * Get all values of property Ppp19 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp19_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP19, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp19 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp19( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP19, value);
	}
	
    /**
     * Adds a value to property Ppp19 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp19( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP19, value);
	}
    /**
     * Adds a value to property Ppp19 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp19(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP19, value);
	}
	
    /**
     * Adds a value to property Ppp19 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp19(BBB value) {
		Base.add(this.model, this.getResource(), PPP19, value);
	}
  

    /**
     * Sets a value of property Ppp19 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp19( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP19, value);
	}
	
    /**
     * Sets a value of property Ppp19 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp19( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP19, value);
	}
    /**
     * Sets a value of property Ppp19 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp19(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP19, value);
	}
	
    /**
     * Sets a value of property Ppp19 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp19(BBB value) {
		Base.set(this.model, this.getResource(), PPP19, value);
	}
  


    /**
     * Removes a value of property Ppp19 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp19( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP19, value);
	}
	
    /**
     * Removes a value of property Ppp19 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp19( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP19, value);
	}
    /**
     * Removes a value of property Ppp19 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp19(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP19, value);
	}
	
    /**
     * Removes a value of property Ppp19 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp19(BBB value) {
		Base.remove(this.model, this.getResource(), PPP19, value);
	}
  
    /**
     * Removes all values of property Ppp19     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp19( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP19);
	}
	
    /**
     * Removes all values of property Ppp19	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp19() {
		Base.removeAll(this.model, this.getResource(), PPP19);
	}
      /**
     * Get all values of property Ppp2 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp2_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP2);
	}
	
    /**
     * Get all values of property Ppp2 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp2_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP2, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp2 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp2_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP2);
	}

    /**
     * Get all values of property Ppp2 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp2_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP2, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp2     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp2(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP2, BBB.class);
	}
	
    /**
     * Get all values of property Ppp2 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp2_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP2, BBB.class);
	}

    /**
     * Get all values of property Ppp2     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp2() {
		return Base.getAll(this.model, this.getResource(), PPP2, BBB.class);
	}

    /**
     * Get all values of property Ppp2 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp2_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP2, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp2 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp2( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP2, value);
	}
	
    /**
     * Adds a value to property Ppp2 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp2( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP2, value);
	}
    /**
     * Adds a value to property Ppp2 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp2(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP2, value);
	}
	
    /**
     * Adds a value to property Ppp2 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp2(BBB value) {
		Base.add(this.model, this.getResource(), PPP2, value);
	}
  

    /**
     * Sets a value of property Ppp2 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp2( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP2, value);
	}
	
    /**
     * Sets a value of property Ppp2 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp2( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP2, value);
	}
    /**
     * Sets a value of property Ppp2 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp2(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP2, value);
	}
	
    /**
     * Sets a value of property Ppp2 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp2(BBB value) {
		Base.set(this.model, this.getResource(), PPP2, value);
	}
  


    /**
     * Removes a value of property Ppp2 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp2( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP2, value);
	}
	
    /**
     * Removes a value of property Ppp2 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp2( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP2, value);
	}
    /**
     * Removes a value of property Ppp2 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp2(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP2, value);
	}
	
    /**
     * Removes a value of property Ppp2 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp2(BBB value) {
		Base.remove(this.model, this.getResource(), PPP2, value);
	}
  
    /**
     * Removes all values of property Ppp2     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp2( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP2);
	}
	
    /**
     * Removes all values of property Ppp2	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp2() {
		Base.removeAll(this.model, this.getResource(), PPP2);
	}
      /**
     * Get all values of property Ppp3 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp3_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP3);
	}
	
    /**
     * Get all values of property Ppp3 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp3_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP3, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp3 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp3_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP3);
	}

    /**
     * Get all values of property Ppp3 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp3_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP3, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp3     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp3(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP3, BBB.class);
	}
	
    /**
     * Get all values of property Ppp3 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp3_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP3, BBB.class);
	}

    /**
     * Get all values of property Ppp3     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp3() {
		return Base.getAll(this.model, this.getResource(), PPP3, BBB.class);
	}

    /**
     * Get all values of property Ppp3 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp3_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP3, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp3 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp3( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP3, value);
	}
	
    /**
     * Adds a value to property Ppp3 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp3( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP3, value);
	}
    /**
     * Adds a value to property Ppp3 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp3(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP3, value);
	}
	
    /**
     * Adds a value to property Ppp3 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp3(BBB value) {
		Base.add(this.model, this.getResource(), PPP3, value);
	}
  

    /**
     * Sets a value of property Ppp3 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp3( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP3, value);
	}
	
    /**
     * Sets a value of property Ppp3 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp3( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP3, value);
	}
    /**
     * Sets a value of property Ppp3 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp3(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP3, value);
	}
	
    /**
     * Sets a value of property Ppp3 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp3(BBB value) {
		Base.set(this.model, this.getResource(), PPP3, value);
	}
  


    /**
     * Removes a value of property Ppp3 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp3( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP3, value);
	}
	
    /**
     * Removes a value of property Ppp3 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp3( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP3, value);
	}
    /**
     * Removes a value of property Ppp3 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp3(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP3, value);
	}
	
    /**
     * Removes a value of property Ppp3 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp3(BBB value) {
		Base.remove(this.model, this.getResource(), PPP3, value);
	}
  
    /**
     * Removes all values of property Ppp3     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp3( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP3);
	}
	
    /**
     * Removes all values of property Ppp3	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp3() {
		Base.removeAll(this.model, this.getResource(), PPP3);
	}
      /**
     * Get all values of property Ppp4 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp4_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP4);
	}
	
    /**
     * Get all values of property Ppp4 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp4_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP4, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp4 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp4_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP4);
	}

    /**
     * Get all values of property Ppp4 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp4_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP4, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp4     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp4(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP4, BBB.class);
	}
	
    /**
     * Get all values of property Ppp4 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp4_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP4, BBB.class);
	}

    /**
     * Get all values of property Ppp4     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp4() {
		return Base.getAll(this.model, this.getResource(), PPP4, BBB.class);
	}

    /**
     * Get all values of property Ppp4 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp4_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP4, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp4 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp4( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP4, value);
	}
	
    /**
     * Adds a value to property Ppp4 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp4( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP4, value);
	}
    /**
     * Adds a value to property Ppp4 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp4(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP4, value);
	}
	
    /**
     * Adds a value to property Ppp4 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp4(BBB value) {
		Base.add(this.model, this.getResource(), PPP4, value);
	}
  

    /**
     * Sets a value of property Ppp4 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp4( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP4, value);
	}
	
    /**
     * Sets a value of property Ppp4 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp4( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP4, value);
	}
    /**
     * Sets a value of property Ppp4 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp4(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP4, value);
	}
	
    /**
     * Sets a value of property Ppp4 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp4(BBB value) {
		Base.set(this.model, this.getResource(), PPP4, value);
	}
  


    /**
     * Removes a value of property Ppp4 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp4( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP4, value);
	}
	
    /**
     * Removes a value of property Ppp4 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp4( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP4, value);
	}
    /**
     * Removes a value of property Ppp4 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp4(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP4, value);
	}
	
    /**
     * Removes a value of property Ppp4 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp4(BBB value) {
		Base.remove(this.model, this.getResource(), PPP4, value);
	}
  
    /**
     * Removes all values of property Ppp4     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp4( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP4);
	}
	
    /**
     * Removes all values of property Ppp4	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp4() {
		Base.removeAll(this.model, this.getResource(), PPP4);
	}
      /**
     * Get all values of property Ppp5 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp5_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP5);
	}
	
    /**
     * Get all values of property Ppp5 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp5_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP5, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp5 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp5_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP5);
	}

    /**
     * Get all values of property Ppp5 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp5_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP5, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp5     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp5(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP5, BBB.class);
	}
	
    /**
     * Get all values of property Ppp5 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp5_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP5, BBB.class);
	}

    /**
     * Get all values of property Ppp5     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp5() {
		return Base.getAll(this.model, this.getResource(), PPP5, BBB.class);
	}

    /**
     * Get all values of property Ppp5 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp5_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP5, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp5 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp5( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP5, value);
	}
	
    /**
     * Adds a value to property Ppp5 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp5( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP5, value);
	}
    /**
     * Adds a value to property Ppp5 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp5(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP5, value);
	}
	
    /**
     * Adds a value to property Ppp5 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp5(BBB value) {
		Base.add(this.model, this.getResource(), PPP5, value);
	}
  

    /**
     * Sets a value of property Ppp5 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp5( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP5, value);
	}
	
    /**
     * Sets a value of property Ppp5 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp5( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP5, value);
	}
    /**
     * Sets a value of property Ppp5 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp5(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP5, value);
	}
	
    /**
     * Sets a value of property Ppp5 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp5(BBB value) {
		Base.set(this.model, this.getResource(), PPP5, value);
	}
  


    /**
     * Removes a value of property Ppp5 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp5( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP5, value);
	}
	
    /**
     * Removes a value of property Ppp5 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp5( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP5, value);
	}
    /**
     * Removes a value of property Ppp5 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp5(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP5, value);
	}
	
    /**
     * Removes a value of property Ppp5 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp5(BBB value) {
		Base.remove(this.model, this.getResource(), PPP5, value);
	}
  
    /**
     * Removes all values of property Ppp5     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp5( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP5);
	}
	
    /**
     * Removes all values of property Ppp5	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp5() {
		Base.removeAll(this.model, this.getResource(), PPP5);
	}
      /**
     * Get all values of property Ppp6 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp6_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP6);
	}
	
    /**
     * Get all values of property Ppp6 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp6_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP6, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp6 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp6_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP6);
	}

    /**
     * Get all values of property Ppp6 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp6_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP6, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp6     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp6(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP6, BBB.class);
	}
	
    /**
     * Get all values of property Ppp6 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp6_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP6, BBB.class);
	}

    /**
     * Get all values of property Ppp6     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp6() {
		return Base.getAll(this.model, this.getResource(), PPP6, BBB.class);
	}

    /**
     * Get all values of property Ppp6 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp6_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP6, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp6 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp6( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP6, value);
	}
	
    /**
     * Adds a value to property Ppp6 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp6( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP6, value);
	}
    /**
     * Adds a value to property Ppp6 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp6(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP6, value);
	}
	
    /**
     * Adds a value to property Ppp6 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp6(BBB value) {
		Base.add(this.model, this.getResource(), PPP6, value);
	}
  

    /**
     * Sets a value of property Ppp6 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp6( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP6, value);
	}
	
    /**
     * Sets a value of property Ppp6 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp6( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP6, value);
	}
    /**
     * Sets a value of property Ppp6 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp6(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP6, value);
	}
	
    /**
     * Sets a value of property Ppp6 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp6(BBB value) {
		Base.set(this.model, this.getResource(), PPP6, value);
	}
  


    /**
     * Removes a value of property Ppp6 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp6( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP6, value);
	}
	
    /**
     * Removes a value of property Ppp6 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp6( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP6, value);
	}
    /**
     * Removes a value of property Ppp6 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp6(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP6, value);
	}
	
    /**
     * Removes a value of property Ppp6 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp6(BBB value) {
		Base.remove(this.model, this.getResource(), PPP6, value);
	}
  
    /**
     * Removes all values of property Ppp6     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp6( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP6);
	}
	
    /**
     * Removes all values of property Ppp6	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp6() {
		Base.removeAll(this.model, this.getResource(), PPP6);
	}
      /**
     * Get all values of property Ppp7 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp7_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP7);
	}
	
    /**
     * Get all values of property Ppp7 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp7_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP7, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp7 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp7_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP7);
	}

    /**
     * Get all values of property Ppp7 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp7_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP7, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp7     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp7(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP7, BBB.class);
	}
	
    /**
     * Get all values of property Ppp7 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp7_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP7, BBB.class);
	}

    /**
     * Get all values of property Ppp7     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp7() {
		return Base.getAll(this.model, this.getResource(), PPP7, BBB.class);
	}

    /**
     * Get all values of property Ppp7 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp7_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP7, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp7 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp7( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP7, value);
	}
	
    /**
     * Adds a value to property Ppp7 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp7( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP7, value);
	}
    /**
     * Adds a value to property Ppp7 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp7(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP7, value);
	}
	
    /**
     * Adds a value to property Ppp7 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp7(BBB value) {
		Base.add(this.model, this.getResource(), PPP7, value);
	}
  

    /**
     * Sets a value of property Ppp7 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp7( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP7, value);
	}
	
    /**
     * Sets a value of property Ppp7 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp7( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP7, value);
	}
    /**
     * Sets a value of property Ppp7 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp7(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP7, value);
	}
	
    /**
     * Sets a value of property Ppp7 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp7(BBB value) {
		Base.set(this.model, this.getResource(), PPP7, value);
	}
  


    /**
     * Removes a value of property Ppp7 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp7( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP7, value);
	}
	
    /**
     * Removes a value of property Ppp7 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp7( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP7, value);
	}
    /**
     * Removes a value of property Ppp7 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp7(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP7, value);
	}
	
    /**
     * Removes a value of property Ppp7 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp7(BBB value) {
		Base.remove(this.model, this.getResource(), PPP7, value);
	}
  
    /**
     * Removes all values of property Ppp7     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp7( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP7);
	}
	
    /**
     * Removes all values of property Ppp7	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp7() {
		Base.removeAll(this.model, this.getResource(), PPP7);
	}
      /**
     * Get all values of property Ppp8 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp8_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP8);
	}
	
    /**
     * Get all values of property Ppp8 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp8_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP8, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp8 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp8_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP8);
	}

    /**
     * Get all values of property Ppp8 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp8_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP8, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp8     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp8(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP8, BBB.class);
	}
	
    /**
     * Get all values of property Ppp8 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp8_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP8, BBB.class);
	}

    /**
     * Get all values of property Ppp8     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp8() {
		return Base.getAll(this.model, this.getResource(), PPP8, BBB.class);
	}

    /**
     * Get all values of property Ppp8 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp8_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP8, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp8 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp8( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP8, value);
	}
	
    /**
     * Adds a value to property Ppp8 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp8( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP8, value);
	}
    /**
     * Adds a value to property Ppp8 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp8(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP8, value);
	}
	
    /**
     * Adds a value to property Ppp8 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp8(BBB value) {
		Base.add(this.model, this.getResource(), PPP8, value);
	}
  

    /**
     * Sets a value of property Ppp8 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp8( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP8, value);
	}
	
    /**
     * Sets a value of property Ppp8 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp8( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP8, value);
	}
    /**
     * Sets a value of property Ppp8 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp8(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP8, value);
	}
	
    /**
     * Sets a value of property Ppp8 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp8(BBB value) {
		Base.set(this.model, this.getResource(), PPP8, value);
	}
  


    /**
     * Removes a value of property Ppp8 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp8( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP8, value);
	}
	
    /**
     * Removes a value of property Ppp8 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp8( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP8, value);
	}
    /**
     * Removes a value of property Ppp8 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp8(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP8, value);
	}
	
    /**
     * Removes a value of property Ppp8 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp8(BBB value) {
		Base.remove(this.model, this.getResource(), PPP8, value);
	}
  
    /**
     * Removes all values of property Ppp8     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp8( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP8);
	}
	
    /**
     * Removes all values of property Ppp8	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp8() {
		Base.removeAll(this.model, this.getResource(), PPP8);
	}
      /**
     * Get all values of property Ppp9 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp9_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, PPP9);
	}
	
    /**
     * Get all values of property Ppp9 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp9_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, PPP9, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Ppp9 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllPpp9_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), PPP9);
	}

    /**
     * Get all values of property Ppp9 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllPpp9_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), PPP9, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Ppp9     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<BBB> getAllPpp9(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PPP9, BBB.class);
	}
	
    /**
     * Get all values of property Ppp9 as a ReactorResult of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<BBB> getAllPpp9_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PPP9, BBB.class);
	}

    /**
     * Get all values of property Ppp9     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<BBB> getAllPpp9() {
		return Base.getAll(this.model, this.getResource(), PPP9, BBB.class);
	}

    /**
     * Get all values of property Ppp9 as a ReactorResult of BBB 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<BBB> getAllPpp9_as() {
		return Base.getAll_as(this.model, this.getResource(), PPP9, BBB.class);
	}
 
    /**
     * Adds a value to property Ppp9 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addPpp9( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PPP9, value);
	}
	
    /**
     * Adds a value to property Ppp9 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addPpp9( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PPP9, value);
	}
    /**
     * Adds a value to property Ppp9 from an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addPpp9(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.add(model, instanceResource, PPP9, value);
	}
	
    /**
     * Adds a value to property Ppp9 from an instance of BBB 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addPpp9(BBB value) {
		Base.add(this.model, this.getResource(), PPP9, value);
	}
  

    /**
     * Sets a value of property Ppp9 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setPpp9( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PPP9, value);
	}
	
    /**
     * Sets a value of property Ppp9 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setPpp9( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PPP9, value);
	}
    /**
     * Sets a value of property Ppp9 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setPpp9(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.set(model, instanceResource, PPP9, value);
	}
	
    /**
     * Sets a value of property Ppp9 from an instance of BBB 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setPpp9(BBB value) {
		Base.set(this.model, this.getResource(), PPP9, value);
	}
  


    /**
     * Removes a value of property Ppp9 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removePpp9( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PPP9, value);
	}
	
    /**
     * Removes a value of property Ppp9 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removePpp9( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PPP9, value);
	}
    /**
     * Removes a value of property Ppp9 given as an instance of BBB 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removePpp9(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, BBB value) {
		Base.remove(model, instanceResource, PPP9, value);
	}
	
    /**
     * Removes a value of property Ppp9 given as an instance of BBB 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removePpp9(BBB value) {
		Base.remove(this.model, this.getResource(), PPP9, value);
	}
  
    /**
     * Removes all values of property Ppp9     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllPpp9( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PPP9);
	}
	
    /**
     * Removes all values of property Ppp9	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addPpp9() {
		Base.removeAll(this.model, this.getResource(), PPP9);
	}
      /**
     * Get all values of property Qqq1 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq1_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ1);
	}
	
    /**
     * Get all values of property Qqq1 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq1_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ1, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq1 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq1_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ1);
	}

    /**
     * Get all values of property Qqq1 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq1_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ1, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq1     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq1(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ1, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq1 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq1_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ1, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq1     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq1() {
		return Base.getAll(this.model, this.getResource(), QQQ1, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq1 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq1_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ1, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq1 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq1( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ1, value);
	}
	
    /**
     * Adds a value to property Qqq1 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq1( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ1, value);
	}
    /**
     * Adds a value to property Qqq1 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq1(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ1, value);
	}
	
    /**
     * Adds a value to property Qqq1 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq1(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ1, value);
	}
  

    /**
     * Sets a value of property Qqq1 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq1( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ1, value);
	}
	
    /**
     * Sets a value of property Qqq1 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq1( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ1, value);
	}
    /**
     * Sets a value of property Qqq1 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq1(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ1, value);
	}
	
    /**
     * Sets a value of property Qqq1 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq1(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ1, value);
	}
  


    /**
     * Removes a value of property Qqq1 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq1( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ1, value);
	}
	
    /**
     * Removes a value of property Qqq1 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq1( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ1, value);
	}
    /**
     * Removes a value of property Qqq1 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq1(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ1, value);
	}
	
    /**
     * Removes a value of property Qqq1 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq1(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ1, value);
	}
  
    /**
     * Removes all values of property Qqq1     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq1( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ1);
	}
	
    /**
     * Removes all values of property Qqq1	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq1() {
		Base.removeAll(this.model, this.getResource(), QQQ1);
	}
      /**
     * Get all values of property Qqq10 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq10_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ10);
	}
	
    /**
     * Get all values of property Qqq10 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq10_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ10, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq10 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq10_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ10);
	}

    /**
     * Get all values of property Qqq10 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq10_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ10, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq10     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq10(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ10, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq10 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq10_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ10, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq10     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq10() {
		return Base.getAll(this.model, this.getResource(), QQQ10, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq10 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq10_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ10, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq10 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq10( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ10, value);
	}
	
    /**
     * Adds a value to property Qqq10 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq10( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ10, value);
	}
    /**
     * Adds a value to property Qqq10 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq10(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ10, value);
	}
	
    /**
     * Adds a value to property Qqq10 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq10(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ10, value);
	}
  

    /**
     * Sets a value of property Qqq10 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq10( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ10, value);
	}
	
    /**
     * Sets a value of property Qqq10 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq10( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ10, value);
	}
    /**
     * Sets a value of property Qqq10 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq10(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ10, value);
	}
	
    /**
     * Sets a value of property Qqq10 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq10(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ10, value);
	}
  


    /**
     * Removes a value of property Qqq10 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq10( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ10, value);
	}
	
    /**
     * Removes a value of property Qqq10 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq10( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ10, value);
	}
    /**
     * Removes a value of property Qqq10 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq10(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ10, value);
	}
	
    /**
     * Removes a value of property Qqq10 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq10(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ10, value);
	}
  
    /**
     * Removes all values of property Qqq10     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq10( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ10);
	}
	
    /**
     * Removes all values of property Qqq10	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq10() {
		Base.removeAll(this.model, this.getResource(), QQQ10);
	}
      /**
     * Get all values of property Qqq11 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq11_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ11);
	}
	
    /**
     * Get all values of property Qqq11 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq11_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ11, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq11 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq11_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ11);
	}

    /**
     * Get all values of property Qqq11 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq11_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ11, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq11     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq11(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ11, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq11 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq11_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ11, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq11     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq11() {
		return Base.getAll(this.model, this.getResource(), QQQ11, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq11 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq11_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ11, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq11 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq11( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ11, value);
	}
	
    /**
     * Adds a value to property Qqq11 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq11( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ11, value);
	}
    /**
     * Adds a value to property Qqq11 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq11(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ11, value);
	}
	
    /**
     * Adds a value to property Qqq11 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq11(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ11, value);
	}
  

    /**
     * Sets a value of property Qqq11 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq11( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ11, value);
	}
	
    /**
     * Sets a value of property Qqq11 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq11( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ11, value);
	}
    /**
     * Sets a value of property Qqq11 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq11(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ11, value);
	}
	
    /**
     * Sets a value of property Qqq11 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq11(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ11, value);
	}
  


    /**
     * Removes a value of property Qqq11 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq11( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ11, value);
	}
	
    /**
     * Removes a value of property Qqq11 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq11( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ11, value);
	}
    /**
     * Removes a value of property Qqq11 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq11(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ11, value);
	}
	
    /**
     * Removes a value of property Qqq11 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq11(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ11, value);
	}
  
    /**
     * Removes all values of property Qqq11     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq11( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ11);
	}
	
    /**
     * Removes all values of property Qqq11	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq11() {
		Base.removeAll(this.model, this.getResource(), QQQ11);
	}
      /**
     * Get all values of property Qqq12 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq12_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ12);
	}
	
    /**
     * Get all values of property Qqq12 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq12_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ12, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq12 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq12_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ12);
	}

    /**
     * Get all values of property Qqq12 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq12_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ12, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq12     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq12(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ12, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq12 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq12_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ12, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq12     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq12() {
		return Base.getAll(this.model, this.getResource(), QQQ12, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq12 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq12_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ12, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq12 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq12( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ12, value);
	}
	
    /**
     * Adds a value to property Qqq12 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq12( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ12, value);
	}
    /**
     * Adds a value to property Qqq12 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq12(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ12, value);
	}
	
    /**
     * Adds a value to property Qqq12 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq12(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ12, value);
	}
  

    /**
     * Sets a value of property Qqq12 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq12( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ12, value);
	}
	
    /**
     * Sets a value of property Qqq12 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq12( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ12, value);
	}
    /**
     * Sets a value of property Qqq12 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq12(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ12, value);
	}
	
    /**
     * Sets a value of property Qqq12 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq12(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ12, value);
	}
  


    /**
     * Removes a value of property Qqq12 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq12( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ12, value);
	}
	
    /**
     * Removes a value of property Qqq12 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq12( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ12, value);
	}
    /**
     * Removes a value of property Qqq12 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq12(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ12, value);
	}
	
    /**
     * Removes a value of property Qqq12 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq12(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ12, value);
	}
  
    /**
     * Removes all values of property Qqq12     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq12( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ12);
	}
	
    /**
     * Removes all values of property Qqq12	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq12() {
		Base.removeAll(this.model, this.getResource(), QQQ12);
	}
      /**
     * Get all values of property Qqq13 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq13_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ13);
	}
	
    /**
     * Get all values of property Qqq13 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq13_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ13, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq13 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq13_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ13);
	}

    /**
     * Get all values of property Qqq13 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq13_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ13, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq13     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ13, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq13 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq13_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ13, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq13     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq13() {
		return Base.getAll(this.model, this.getResource(), QQQ13, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq13 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq13_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ13, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq13 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ13, value);
	}
	
    /**
     * Adds a value to property Qqq13 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq13( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ13, value);
	}
    /**
     * Adds a value to property Qqq13 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ13, value);
	}
	
    /**
     * Adds a value to property Qqq13 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq13(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ13, value);
	}
  

    /**
     * Sets a value of property Qqq13 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ13, value);
	}
	
    /**
     * Sets a value of property Qqq13 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq13( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ13, value);
	}
    /**
     * Sets a value of property Qqq13 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ13, value);
	}
	
    /**
     * Sets a value of property Qqq13 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq13(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ13, value);
	}
  


    /**
     * Removes a value of property Qqq13 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ13, value);
	}
	
    /**
     * Removes a value of property Qqq13 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq13( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ13, value);
	}
    /**
     * Removes a value of property Qqq13 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ13, value);
	}
	
    /**
     * Removes a value of property Qqq13 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq13(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ13, value);
	}
  
    /**
     * Removes all values of property Qqq13     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ13);
	}
	
    /**
     * Removes all values of property Qqq13	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq13() {
		Base.removeAll(this.model, this.getResource(), QQQ13);
	}
      /**
     * Get all values of property Qqq14 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq14_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ14);
	}
	
    /**
     * Get all values of property Qqq14 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq14_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ14, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq14 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq14_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ14);
	}

    /**
     * Get all values of property Qqq14 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq14_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ14, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq14     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq14(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ14, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq14 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq14_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ14, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq14     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq14() {
		return Base.getAll(this.model, this.getResource(), QQQ14, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq14 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq14_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ14, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq14 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq14( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ14, value);
	}
	
    /**
     * Adds a value to property Qqq14 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq14( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ14, value);
	}
    /**
     * Adds a value to property Qqq14 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq14(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ14, value);
	}
	
    /**
     * Adds a value to property Qqq14 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq14(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ14, value);
	}
  

    /**
     * Sets a value of property Qqq14 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq14( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ14, value);
	}
	
    /**
     * Sets a value of property Qqq14 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq14( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ14, value);
	}
    /**
     * Sets a value of property Qqq14 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq14(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ14, value);
	}
	
    /**
     * Sets a value of property Qqq14 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq14(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ14, value);
	}
  


    /**
     * Removes a value of property Qqq14 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq14( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ14, value);
	}
	
    /**
     * Removes a value of property Qqq14 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq14( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ14, value);
	}
    /**
     * Removes a value of property Qqq14 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq14(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ14, value);
	}
	
    /**
     * Removes a value of property Qqq14 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq14(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ14, value);
	}
  
    /**
     * Removes all values of property Qqq14     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq14( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ14);
	}
	
    /**
     * Removes all values of property Qqq14	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq14() {
		Base.removeAll(this.model, this.getResource(), QQQ14);
	}
      /**
     * Get all values of property Qqq15 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq15_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ15);
	}
	
    /**
     * Get all values of property Qqq15 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq15_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ15, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq15 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq15_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ15);
	}

    /**
     * Get all values of property Qqq15 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq15_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ15, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq15     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq15(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ15, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq15 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq15_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ15, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq15     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq15() {
		return Base.getAll(this.model, this.getResource(), QQQ15, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq15 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq15_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ15, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq15 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq15( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ15, value);
	}
	
    /**
     * Adds a value to property Qqq15 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq15( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ15, value);
	}
    /**
     * Adds a value to property Qqq15 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq15(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ15, value);
	}
	
    /**
     * Adds a value to property Qqq15 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq15(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ15, value);
	}
  

    /**
     * Sets a value of property Qqq15 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq15( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ15, value);
	}
	
    /**
     * Sets a value of property Qqq15 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq15( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ15, value);
	}
    /**
     * Sets a value of property Qqq15 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq15(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ15, value);
	}
	
    /**
     * Sets a value of property Qqq15 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq15(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ15, value);
	}
  


    /**
     * Removes a value of property Qqq15 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq15( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ15, value);
	}
	
    /**
     * Removes a value of property Qqq15 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq15( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ15, value);
	}
    /**
     * Removes a value of property Qqq15 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq15(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ15, value);
	}
	
    /**
     * Removes a value of property Qqq15 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq15(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ15, value);
	}
  
    /**
     * Removes all values of property Qqq15     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq15( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ15);
	}
	
    /**
     * Removes all values of property Qqq15	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq15() {
		Base.removeAll(this.model, this.getResource(), QQQ15);
	}
      /**
     * Get all values of property Qqq16 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq16_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ16);
	}
	
    /**
     * Get all values of property Qqq16 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq16_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ16, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq16 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq16_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ16);
	}

    /**
     * Get all values of property Qqq16 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq16_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ16, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq16     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq16(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ16, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq16 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq16_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ16, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq16     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq16() {
		return Base.getAll(this.model, this.getResource(), QQQ16, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq16 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq16_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ16, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq16 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq16( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ16, value);
	}
	
    /**
     * Adds a value to property Qqq16 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq16( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ16, value);
	}
    /**
     * Adds a value to property Qqq16 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq16(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ16, value);
	}
	
    /**
     * Adds a value to property Qqq16 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq16(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ16, value);
	}
  

    /**
     * Sets a value of property Qqq16 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq16( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ16, value);
	}
	
    /**
     * Sets a value of property Qqq16 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq16( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ16, value);
	}
    /**
     * Sets a value of property Qqq16 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq16(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ16, value);
	}
	
    /**
     * Sets a value of property Qqq16 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq16(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ16, value);
	}
  


    /**
     * Removes a value of property Qqq16 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq16( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ16, value);
	}
	
    /**
     * Removes a value of property Qqq16 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq16( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ16, value);
	}
    /**
     * Removes a value of property Qqq16 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq16(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ16, value);
	}
	
    /**
     * Removes a value of property Qqq16 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq16(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ16, value);
	}
  
    /**
     * Removes all values of property Qqq16     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq16( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ16);
	}
	
    /**
     * Removes all values of property Qqq16	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq16() {
		Base.removeAll(this.model, this.getResource(), QQQ16);
	}
      /**
     * Get all values of property Qqq17 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq17_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ17);
	}
	
    /**
     * Get all values of property Qqq17 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq17_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ17, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq17 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq17_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ17);
	}

    /**
     * Get all values of property Qqq17 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq17_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ17, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq17     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq17(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ17, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq17 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq17_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ17, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq17     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq17() {
		return Base.getAll(this.model, this.getResource(), QQQ17, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq17 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq17_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ17, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq17 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq17( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ17, value);
	}
	
    /**
     * Adds a value to property Qqq17 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq17( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ17, value);
	}
    /**
     * Adds a value to property Qqq17 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq17(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ17, value);
	}
	
    /**
     * Adds a value to property Qqq17 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq17(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ17, value);
	}
  

    /**
     * Sets a value of property Qqq17 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq17( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ17, value);
	}
	
    /**
     * Sets a value of property Qqq17 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq17( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ17, value);
	}
    /**
     * Sets a value of property Qqq17 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq17(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ17, value);
	}
	
    /**
     * Sets a value of property Qqq17 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq17(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ17, value);
	}
  


    /**
     * Removes a value of property Qqq17 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq17( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ17, value);
	}
	
    /**
     * Removes a value of property Qqq17 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq17( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ17, value);
	}
    /**
     * Removes a value of property Qqq17 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq17(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ17, value);
	}
	
    /**
     * Removes a value of property Qqq17 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq17(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ17, value);
	}
  
    /**
     * Removes all values of property Qqq17     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq17( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ17);
	}
	
    /**
     * Removes all values of property Qqq17	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq17() {
		Base.removeAll(this.model, this.getResource(), QQQ17);
	}
      /**
     * Get all values of property Qqq18 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq18_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ18);
	}
	
    /**
     * Get all values of property Qqq18 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq18_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ18, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq18 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq18_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ18);
	}

    /**
     * Get all values of property Qqq18 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq18_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ18, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq18     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq18(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ18, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq18 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq18_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ18, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq18     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq18() {
		return Base.getAll(this.model, this.getResource(), QQQ18, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq18 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq18_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ18, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq18 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq18( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ18, value);
	}
	
    /**
     * Adds a value to property Qqq18 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq18( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ18, value);
	}
    /**
     * Adds a value to property Qqq18 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq18(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ18, value);
	}
	
    /**
     * Adds a value to property Qqq18 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq18(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ18, value);
	}
  

    /**
     * Sets a value of property Qqq18 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq18( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ18, value);
	}
	
    /**
     * Sets a value of property Qqq18 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq18( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ18, value);
	}
    /**
     * Sets a value of property Qqq18 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq18(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ18, value);
	}
	
    /**
     * Sets a value of property Qqq18 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq18(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ18, value);
	}
  


    /**
     * Removes a value of property Qqq18 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq18( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ18, value);
	}
	
    /**
     * Removes a value of property Qqq18 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq18( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ18, value);
	}
    /**
     * Removes a value of property Qqq18 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq18(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ18, value);
	}
	
    /**
     * Removes a value of property Qqq18 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq18(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ18, value);
	}
  
    /**
     * Removes all values of property Qqq18     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq18( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ18);
	}
	
    /**
     * Removes all values of property Qqq18	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq18() {
		Base.removeAll(this.model, this.getResource(), QQQ18);
	}
      /**
     * Get all values of property Qqq19 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq19_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ19);
	}
	
    /**
     * Get all values of property Qqq19 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq19_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ19, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq19 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq19_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ19);
	}

    /**
     * Get all values of property Qqq19 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq19_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ19, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq19     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq19(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ19, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq19 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq19_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ19, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq19     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq19() {
		return Base.getAll(this.model, this.getResource(), QQQ19, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq19 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq19_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ19, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq19 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq19( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ19, value);
	}
	
    /**
     * Adds a value to property Qqq19 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq19( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ19, value);
	}
    /**
     * Adds a value to property Qqq19 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq19(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ19, value);
	}
	
    /**
     * Adds a value to property Qqq19 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq19(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ19, value);
	}
  

    /**
     * Sets a value of property Qqq19 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq19( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ19, value);
	}
	
    /**
     * Sets a value of property Qqq19 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq19( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ19, value);
	}
    /**
     * Sets a value of property Qqq19 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq19(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ19, value);
	}
	
    /**
     * Sets a value of property Qqq19 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq19(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ19, value);
	}
  


    /**
     * Removes a value of property Qqq19 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq19( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ19, value);
	}
	
    /**
     * Removes a value of property Qqq19 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq19( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ19, value);
	}
    /**
     * Removes a value of property Qqq19 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq19(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ19, value);
	}
	
    /**
     * Removes a value of property Qqq19 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq19(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ19, value);
	}
  
    /**
     * Removes all values of property Qqq19     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq19( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ19);
	}
	
    /**
     * Removes all values of property Qqq19	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq19() {
		Base.removeAll(this.model, this.getResource(), QQQ19);
	}
      /**
     * Get all values of property Qqq2 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq2_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ2);
	}
	
    /**
     * Get all values of property Qqq2 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq2_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ2, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq2 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq2_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ2);
	}

    /**
     * Get all values of property Qqq2 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq2_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ2, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq2     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq2(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ2, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq2 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq2_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ2, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq2     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq2() {
		return Base.getAll(this.model, this.getResource(), QQQ2, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq2 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq2_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ2, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq2 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq2( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ2, value);
	}
	
    /**
     * Adds a value to property Qqq2 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq2( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ2, value);
	}
    /**
     * Adds a value to property Qqq2 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq2(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ2, value);
	}
	
    /**
     * Adds a value to property Qqq2 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq2(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ2, value);
	}
  

    /**
     * Sets a value of property Qqq2 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq2( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ2, value);
	}
	
    /**
     * Sets a value of property Qqq2 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq2( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ2, value);
	}
    /**
     * Sets a value of property Qqq2 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq2(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ2, value);
	}
	
    /**
     * Sets a value of property Qqq2 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq2(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ2, value);
	}
  


    /**
     * Removes a value of property Qqq2 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq2( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ2, value);
	}
	
    /**
     * Removes a value of property Qqq2 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq2( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ2, value);
	}
    /**
     * Removes a value of property Qqq2 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq2(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ2, value);
	}
	
    /**
     * Removes a value of property Qqq2 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq2(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ2, value);
	}
  
    /**
     * Removes all values of property Qqq2     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq2( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ2);
	}
	
    /**
     * Removes all values of property Qqq2	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq2() {
		Base.removeAll(this.model, this.getResource(), QQQ2);
	}
      /**
     * Get all values of property Qqq3 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq3_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ3);
	}
	
    /**
     * Get all values of property Qqq3 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq3_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ3, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq3 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq3_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ3);
	}

    /**
     * Get all values of property Qqq3 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq3_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ3, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq3     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq3(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ3, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq3 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq3_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ3, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq3     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq3() {
		return Base.getAll(this.model, this.getResource(), QQQ3, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq3 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq3_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ3, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq3 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq3( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ3, value);
	}
	
    /**
     * Adds a value to property Qqq3 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq3( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ3, value);
	}
    /**
     * Adds a value to property Qqq3 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq3(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ3, value);
	}
	
    /**
     * Adds a value to property Qqq3 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq3(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ3, value);
	}
  

    /**
     * Sets a value of property Qqq3 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq3( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ3, value);
	}
	
    /**
     * Sets a value of property Qqq3 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq3( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ3, value);
	}
    /**
     * Sets a value of property Qqq3 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq3(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ3, value);
	}
	
    /**
     * Sets a value of property Qqq3 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq3(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ3, value);
	}
  


    /**
     * Removes a value of property Qqq3 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq3( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ3, value);
	}
	
    /**
     * Removes a value of property Qqq3 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq3( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ3, value);
	}
    /**
     * Removes a value of property Qqq3 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq3(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ3, value);
	}
	
    /**
     * Removes a value of property Qqq3 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq3(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ3, value);
	}
  
    /**
     * Removes all values of property Qqq3     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq3( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ3);
	}
	
    /**
     * Removes all values of property Qqq3	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq3() {
		Base.removeAll(this.model, this.getResource(), QQQ3);
	}
      /**
     * Get all values of property Qqq4 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq4_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ4);
	}
	
    /**
     * Get all values of property Qqq4 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq4_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ4, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq4 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq4_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ4);
	}

    /**
     * Get all values of property Qqq4 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq4_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ4, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq4     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq4(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ4, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq4 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq4_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ4, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq4     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq4() {
		return Base.getAll(this.model, this.getResource(), QQQ4, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq4 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq4_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ4, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq4 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq4( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ4, value);
	}
	
    /**
     * Adds a value to property Qqq4 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq4( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ4, value);
	}
    /**
     * Adds a value to property Qqq4 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq4(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ4, value);
	}
	
    /**
     * Adds a value to property Qqq4 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq4(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ4, value);
	}
  

    /**
     * Sets a value of property Qqq4 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq4( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ4, value);
	}
	
    /**
     * Sets a value of property Qqq4 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq4( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ4, value);
	}
    /**
     * Sets a value of property Qqq4 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq4(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ4, value);
	}
	
    /**
     * Sets a value of property Qqq4 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq4(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ4, value);
	}
  


    /**
     * Removes a value of property Qqq4 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq4( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ4, value);
	}
	
    /**
     * Removes a value of property Qqq4 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq4( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ4, value);
	}
    /**
     * Removes a value of property Qqq4 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq4(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ4, value);
	}
	
    /**
     * Removes a value of property Qqq4 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq4(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ4, value);
	}
  
    /**
     * Removes all values of property Qqq4     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq4( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ4);
	}
	
    /**
     * Removes all values of property Qqq4	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq4() {
		Base.removeAll(this.model, this.getResource(), QQQ4);
	}
      /**
     * Get all values of property Qqq5 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq5_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ5);
	}
	
    /**
     * Get all values of property Qqq5 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq5_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ5, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq5 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq5_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ5);
	}

    /**
     * Get all values of property Qqq5 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq5_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ5, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq5     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq5(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ5, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq5 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq5_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ5, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq5     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq5() {
		return Base.getAll(this.model, this.getResource(), QQQ5, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq5 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq5_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ5, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq5 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq5( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ5, value);
	}
	
    /**
     * Adds a value to property Qqq5 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq5( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ5, value);
	}
    /**
     * Adds a value to property Qqq5 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq5(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ5, value);
	}
	
    /**
     * Adds a value to property Qqq5 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq5(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ5, value);
	}
  

    /**
     * Sets a value of property Qqq5 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq5( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ5, value);
	}
	
    /**
     * Sets a value of property Qqq5 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq5( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ5, value);
	}
    /**
     * Sets a value of property Qqq5 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq5(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ5, value);
	}
	
    /**
     * Sets a value of property Qqq5 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq5(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ5, value);
	}
  


    /**
     * Removes a value of property Qqq5 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq5( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ5, value);
	}
	
    /**
     * Removes a value of property Qqq5 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq5( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ5, value);
	}
    /**
     * Removes a value of property Qqq5 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq5(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ5, value);
	}
	
    /**
     * Removes a value of property Qqq5 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq5(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ5, value);
	}
  
    /**
     * Removes all values of property Qqq5     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq5( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ5);
	}
	
    /**
     * Removes all values of property Qqq5	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq5() {
		Base.removeAll(this.model, this.getResource(), QQQ5);
	}
      /**
     * Get all values of property Qqq6 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq6_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ6);
	}
	
    /**
     * Get all values of property Qqq6 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq6_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ6, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq6 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq6_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ6);
	}

    /**
     * Get all values of property Qqq6 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq6_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ6, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq6     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq6(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ6, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq6 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq6_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ6, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq6     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq6() {
		return Base.getAll(this.model, this.getResource(), QQQ6, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq6 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq6_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ6, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq6 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq6( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ6, value);
	}
	
    /**
     * Adds a value to property Qqq6 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq6( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ6, value);
	}
    /**
     * Adds a value to property Qqq6 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq6(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ6, value);
	}
	
    /**
     * Adds a value to property Qqq6 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq6(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ6, value);
	}
  

    /**
     * Sets a value of property Qqq6 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq6( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ6, value);
	}
	
    /**
     * Sets a value of property Qqq6 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq6( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ6, value);
	}
    /**
     * Sets a value of property Qqq6 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq6(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ6, value);
	}
	
    /**
     * Sets a value of property Qqq6 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq6(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ6, value);
	}
  


    /**
     * Removes a value of property Qqq6 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq6( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ6, value);
	}
	
    /**
     * Removes a value of property Qqq6 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq6( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ6, value);
	}
    /**
     * Removes a value of property Qqq6 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq6(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ6, value);
	}
	
    /**
     * Removes a value of property Qqq6 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq6(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ6, value);
	}
  
    /**
     * Removes all values of property Qqq6     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq6( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ6);
	}
	
    /**
     * Removes all values of property Qqq6	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq6() {
		Base.removeAll(this.model, this.getResource(), QQQ6);
	}
      /**
     * Get all values of property Qqq7 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq7_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ7);
	}
	
    /**
     * Get all values of property Qqq7 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq7_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ7, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq7 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq7_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ7);
	}

    /**
     * Get all values of property Qqq7 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq7_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ7, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq7     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq7(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ7, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq7 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq7_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ7, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq7     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq7() {
		return Base.getAll(this.model, this.getResource(), QQQ7, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq7 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq7_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ7, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq7 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq7( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ7, value);
	}
	
    /**
     * Adds a value to property Qqq7 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq7( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ7, value);
	}
    /**
     * Adds a value to property Qqq7 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq7(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ7, value);
	}
	
    /**
     * Adds a value to property Qqq7 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq7(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ7, value);
	}
  

    /**
     * Sets a value of property Qqq7 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq7( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ7, value);
	}
	
    /**
     * Sets a value of property Qqq7 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq7( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ7, value);
	}
    /**
     * Sets a value of property Qqq7 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq7(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ7, value);
	}
	
    /**
     * Sets a value of property Qqq7 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq7(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ7, value);
	}
  


    /**
     * Removes a value of property Qqq7 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq7( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ7, value);
	}
	
    /**
     * Removes a value of property Qqq7 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq7( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ7, value);
	}
    /**
     * Removes a value of property Qqq7 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq7(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ7, value);
	}
	
    /**
     * Removes a value of property Qqq7 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq7(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ7, value);
	}
  
    /**
     * Removes all values of property Qqq7     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq7( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ7);
	}
	
    /**
     * Removes all values of property Qqq7	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq7() {
		Base.removeAll(this.model, this.getResource(), QQQ7);
	}
      /**
     * Get all values of property Qqq8 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq8_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ8);
	}
	
    /**
     * Get all values of property Qqq8 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq8_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ8, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq8 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq8_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ8);
	}

    /**
     * Get all values of property Qqq8 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq8_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ8, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq8     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq8(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ8, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq8 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq8_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ8, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq8     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq8() {
		return Base.getAll(this.model, this.getResource(), QQQ8, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq8 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq8_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ8, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq8 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq8( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ8, value);
	}
	
    /**
     * Adds a value to property Qqq8 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq8( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ8, value);
	}
    /**
     * Adds a value to property Qqq8 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq8(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ8, value);
	}
	
    /**
     * Adds a value to property Qqq8 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq8(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ8, value);
	}
  

    /**
     * Sets a value of property Qqq8 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq8( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ8, value);
	}
	
    /**
     * Sets a value of property Qqq8 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq8( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ8, value);
	}
    /**
     * Sets a value of property Qqq8 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq8(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ8, value);
	}
	
    /**
     * Sets a value of property Qqq8 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq8(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ8, value);
	}
  


    /**
     * Removes a value of property Qqq8 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq8( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ8, value);
	}
	
    /**
     * Removes a value of property Qqq8 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq8( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ8, value);
	}
    /**
     * Removes a value of property Qqq8 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq8(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ8, value);
	}
	
    /**
     * Removes a value of property Qqq8 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq8(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ8, value);
	}
  
    /**
     * Removes all values of property Qqq8     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq8( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ8);
	}
	
    /**
     * Removes all values of property Qqq8	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq8() {
		Base.removeAll(this.model, this.getResource(), QQQ8);
	}
      /**
     * Get all values of property Qqq9 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq9_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(model, instanceResource, QQQ9);
	}
	
    /**
     * Get all values of property Qqq9 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq9_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(model, instanceResource, QQQ9, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Qqq9 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllQqq9_asNode() {
		return (ClosableIterator<org.ontoware.rdf2go.model.node.Node>) Base.getAll_asNode(this.model, this.getResource(), QQQ9);
	}

    /**
     * Get all values of property Qqq9 as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllQqq9_asNode_() {
		return (ReactorResult<org.ontoware.rdf2go.model.node.Node>) Base.getAll_as(this.model, this.getResource(), QQQ9, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Qqq9     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllQqq9(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, QQQ9, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property Qqq9 as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllQqq9_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, QQQ9, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq9     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllQqq9() {
		return Base.getAll(this.model, this.getResource(), QQQ9, java.lang.Integer.class);
	}

    /**
     * Get all values of property Qqq9 as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllQqq9_as() {
		return Base.getAll_as(this.model, this.getResource(), QQQ9, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property Qqq9 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addQqq9( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, QQQ9, value);
	}
	
    /**
     * Adds a value to property Qqq9 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addQqq9( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), QQQ9, value);
	}
    /**
     * Adds a value to property Qqq9 from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addQqq9(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, QQQ9, value);
	}
	
    /**
     * Adds a value to property Qqq9 from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addQqq9(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), QQQ9, value);
	}
  

    /**
     * Sets a value of property Qqq9 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setQqq9( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, QQQ9, value);
	}
	
    /**
     * Sets a value of property Qqq9 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setQqq9( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), QQQ9, value);
	}
    /**
     * Sets a value of property Qqq9 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setQqq9(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, QQQ9, value);
	}
	
    /**
     * Sets a value of property Qqq9 from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setQqq9(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), QQQ9, value);
	}
  


    /**
     * Removes a value of property Qqq9 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeQqq9( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, QQQ9, value);
	}
	
    /**
     * Removes a value of property Qqq9 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeQqq9( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), QQQ9, value);
	}
    /**
     * Removes a value of property Qqq9 given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeQqq9(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, QQQ9, value);
	}
	
    /**
     * Removes a value of property Qqq9 given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeQqq9(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), QQQ9, value);
	}
  
    /**
     * Removes all values of property Qqq9     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllQqq9( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, QQQ9);
	}
	
    /**
     * Removes all values of property Qqq9	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void addQqq9() {
		Base.removeAll(this.model, this.getResource(), QQQ9);
	}
 }