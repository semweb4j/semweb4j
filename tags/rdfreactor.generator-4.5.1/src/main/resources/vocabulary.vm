#macro( mixedcase $name )$name.substring(0,1).toUpperCase()$name.substring(1)#end
#macro( lowercase $name )$name.toLowerCase()#end
#macro( uppercase $name )$name.toUpperCase()#end

/**
 * generated by http://RDFReactor.semweb4j.org on $now
 */
package $package.name;

import org.ontoware.rdf2go.model.Model;
import org.ontoware.rdf2go.model.node.BlankNode;
import org.ontoware.rdf2go.model.node.URI;
import org.ontoware.rdf2go.model.node.impl.URIImpl;
import org.ontoware.rdf2go.exception.ModelException;

#if ($class.throwsRDFDataException() )
import org.ontoware.rdfreactor.runtime.RDFDataException;
#end
#if ($class.throwsCardinalityException() )
import org.ontoware.rdfreactor.runtime.CardinalityException;
#end

#if($class.superclass.toString().equals("ReactorBaseNamed"))
import org.ontoware.rdfreactor.runtime.ReactorBaseNamed;
#end

/**
 * This class was generated by <a href="http://RDFReactor.semweb4j.org">RDFReactor</a> on $now
#if ($class.properties.size() > 0)
 * This class defines these properties:
 * <ul>
#foreach( $prop in $class.properties )
 *   <li> #mixedcase( $prop.name ) </li>
#end 
 * </ul>
#end
#if($class.getComment())
 * Schema Comment: ${class.getComment()}
#end
 */
public class $class.name extends $class.superclass {

    /** $class.mappedTo */
	public static final URI RDFS_CLASS = URIImpl.createURIWithoutChecking("$class.mappedTo");
#foreach( $prop in $class.properties )

    /** $prop.mappedTo */
	public static final URI #uppercase( $prop.name ) = URIImpl.createURIWithoutChecking("$prop.mappedTo");
#end

    /** all property-URIs with this class as domain */
    public static final URI[] MANAGED_URIS = {
#foreach( $prop in $class.properties )
      URIImpl.createURIWithoutChecking("$prop.mappedTo")#if (${velocityCount} < $class.properties.size()),
#end
#end
 
    };

}

  
  
