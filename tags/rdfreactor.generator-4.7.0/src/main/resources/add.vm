## ================================================
##
##   if(maxCard==?)
##     "add(Node)"
##     for each range R
##       generate add(R)   
##   else
##     "add(Node,maxCard)"
##     for each range R
##       generate add(R,maxCard)   
##
## ================================================
##
##     -----------------------------------------------------------------------
##    | IF max cardinality == UNDEFINED. GENERATE "add(Node node)"
#if($prop.maxCardinality == $UNDEFINED)

    /**
     * Adds a value to property #mixedcase($prop.name ) as an RDF2Go node 
#comment("     " $prop)
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
#debug("add1static")
     */
	public static void add${methodnameprefix}#mixedcase($prop.name )( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, #uppercase($prop.name), value);
	}
	
    /**
     * Adds a value to property #mixedcase($prop.name ) as an RDF2Go node 
#comment("     " $prop)
	 * @param value the value to be added
#debug("add1dynamic")
     */
	public void add${methodnameprefix}#mixedcase($prop.name )( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), #uppercase($prop.name), value);
	}
##             -----------------------------------------------------------------------
##            | FOR each range R: GENERATE "add(R)"
#foreach($type in $prop.types)
    /**
     * Adds a value to property #mixedcase($prop.name ) from an instance of ${type} 
#comment("     " $type)
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
#debug("add3static")
     */
	public static void add${methodnameprefix}#mixedcase($prop.name )(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, $type value) {
		Base.add(model, instanceResource, #uppercase($prop.name), value);
	}
	
    /**
     * Adds a value to property #mixedcase($prop.name ) from an instance of ${type} 
#comment("     " $type)
#debug("add4dynamic")
     */
	public void add${methodnameprefix}#mixedcase($prop.name )($type value) {
		Base.add(this.model, this.getResource(), #uppercase($prop.name), value);
	}
#end ## #foreach(type in $prop.types)
##     -----------------------------------------------------------------------
##    | END IF max cardinality == UNDEFINED
#else 
##     -----------------------------------------------------------------------
##    | max cardinality defined

    /**
     * Adds a value to property #mixedcase($prop.name ) as an RDF2Go node 
#comment("     " $prop)
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 * @throws CardinalityException if adding a value would bring the number 
	 *            of property values above the cardinality constraint.
#debug("add5static")
     */
	public static void add${methodnameprefix}#mixedcase($prop.name )( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) 
    throws CardinalityException {
		Base.add(model, instanceResource, #uppercase($prop.name), value, $prop.maxCardinality);
	}
	
    /**
     * Adds a value to property #mixedcase($prop.name ) as an RDF2Go node 
#comment("     " $prop)
	 * @param value the value to be added
	 * @throws CardinalityException if adding a value would bring the number 
	 *            of property values above the cardinality constraint.
#debug("add6dynamic")
     */
	public void add${methodnameprefix}#mixedcase($prop.name )( org.ontoware.rdf2go.model.node.Node value) 
    throws CardinalityException {
		Base.add(this.model, this.getResource(), #uppercase($prop.name), value, $prop.maxCardinality);
	}
##             -----------------------------------------------------------------------
##            | FOR each range R: GENERATE "add(R)"
#foreach($type in $prop.types)
    /**
     * Adds a value to property #mixedcase($prop.name ) from an instance of ${type} 
#comment("     " $type)
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @throws CardinalityException if adding a value would bring the number 
	 *            of property values above the cardinality constraint.
#debug("add7static")
     */
	public static void add${methodnameprefix}#mixedcase($prop.name )(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, $type value)
    throws CardinalityException {
		Base.add(model, instanceResource, #uppercase($prop.name), value, $prop.maxCardinality);
	}
	
    /**
     * Adds a value to property #mixedcase($prop.name ) from an instance of ${type} 
#comment("     " $type)
	 * @throws CardinalityException if adding a value would bring the number 
	 *            of property values above the cardinality constraint.
#debug("add8dynamic")
     */
	public void add${methodnameprefix}#mixedcase($prop.name )($type value) 
    throws CardinalityException {
		Base.add(this.model, this.getResource(), #uppercase($prop.name), value, $prop.maxCardinality);
	}
#end ## #foreach(type in $prop.types)

#end ## else
